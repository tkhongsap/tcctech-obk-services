/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/health": {
    /** Check health */
    get: operations["health_controller.get"];
  };
  "/broadcast": {
    /** broadcast message to mobile */
    post: operations["broadcast_controller.broadcast"];
  };
  "/broadcast/all": {
    /** broadcast message to all mobile */
    post: operations["broadcast_controller.broadcastAll"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Error: {
      /**
       * @example INTERNAL_SERVER_ERROR 
       * @enum {string}
       */
      code: "BAD_REQUEST" | "NOT_FOUND" | "USER_NOT_FOUND" | "INTERNAL_SERVER_ERROR";
      /** @example error message */
      message: string;
    };
    HealthData: {
      health: boolean;
    };
    HealthResponse: {
      data: components["schemas"]["HealthData"];
    };
    BroadcastResponse: unknown;
  };
  responses: {
    /** @description Health response */
    HealthResponse: {
      content: {
        "application/json": components["schemas"]["HealthResponse"];
      };
    };
    /** @description Broadcast response */
    BroadcastResponse: {
      content: {
        "application/json": components["schemas"]["BroadcastResponse"];
      };
    };
    /** @description Unexpected error occurred */
    ErrorResp: {
      content: {
        "application/json": {
          error: components["schemas"]["Error"];
        };
      };
    };
  };
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /** Check health */
  "health_controller.get": {
    responses: {
      200: components["responses"]["HealthResponse"];
      400: components["responses"]["ErrorResp"];
      500: components["responses"]["ErrorResp"];
    };
  };
  /** broadcast message to mobile */
  "broadcast_controller.broadcast": {
    responses: {
      200: components["responses"]["BroadcastResponse"];
      400: components["responses"]["ErrorResp"];
      500: components["responses"]["ErrorResp"];
    };
  };
  /** broadcast message to all mobile */
  "broadcast_controller.broadcastAll": {
    responses: {
      200: components["responses"]["BroadcastResponse"];
      400: components["responses"]["ErrorResp"];
      500: components["responses"]["ErrorResp"];
    };
  };
}
