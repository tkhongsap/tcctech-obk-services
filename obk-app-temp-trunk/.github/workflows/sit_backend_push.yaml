name: Backend Push

on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      env:
        required: true
        type: string
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true

jobs:
  push:
    defaults:
      run:
        working-directory: "./backend/${{ inputs.service }}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ap-southeast-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "${{ inputs.service }}/sit"
          IMAGE_SHA: ${{ github.sha }}
          IMAGE_SERVICE: ${{ inputs.service }}
          IMAGE_TAG: "${{ inputs.service }}_${{ github.sha }}"
          IMAGE_TAG_LATEST: "latest"
        run: |
          cd ..
          docker build --platform=linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_LATEST . --build-arg BUILD_CONTEXT=${{ inputs.service }}
          docker image push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          cd ${{ inputs.service }}
