#build-docker-image:
#  stage: build-image
#  rules:
#    - if: $CI_COMMIT_BRANCH == "prod" || ($CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "prod")
#  image:
#    name: gcr.io/kaniko-project/executor:debug
#    entrypoint: ['']
#  variables:
#    ECR_REGISTRY: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
#    CI_REGISTRY_IMAGE: $ECR_REGISTRY/$ECR_REPOSITORY
#  script:
#    - mkdir -p /kaniko/.docker
#    - echo "{\"credsStore\":\"ecr-login\"}" > /kaniko/.docker/config.json
#    - echo "Building and push Docker image..."
#    - >-
#      /kaniko/executor
#      --context "${CI_PROJECT_DIR}"
#      --dockerfile "${CI_PROJECT_DIR}/dockerfile"
#      --build-arg=NODE_ENV=dev
#      --destination $ECR_REGISTRY/$ECR_REPOSITORY:latest
#    - BUILD_IMAGE=$ECR_REGISTRY/$ECR_REPOSITORY:latest > vars.env
#    - echo "Docker image pushed successfully."
#  artifacts:
#    reports:
#      dotenv: vars.env
#
#
#deploy-dev:
#  stage: deploy
#  # needs: [build-docker-image]
#  image: alpine:3.8
#  before_script:
#    - apk add --no-cache gettext
#    - echo "Installing curl and bash..."
#    - apk add --no-cache git curl bash coreutils
#    - echo "Install Kustomize"
#    - curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
#    - mv kustomize /usr/local/bin/
#    - echo "Kustomize installed"
#    - echo "Setting up environment.."
#    - export IMAGE_URL="730335418784.dkr.ecr.ap-southeast-1.amazonaws.com/ob-iam/production:latest"
#    - envsubst < ./k8s/prod/gen > ./k8s/prod/kustomization.yaml
#    - echo "Environment setup complete"
#    - cd ./k8s/prod
#    - TIMESTAMP=$(date +%s)
#    - kustomize edit add annotation "deploy-timestamp":$TIMESTAMP -f
#    - kustomize edit set image 730335418784.dkr.ecr.ap-southeast-1.amazonaws.com/ob-iam/production:latest
#    - kustomize build
#    - echo "Deploy timestamp set to $TIMESTAMP"
#    - echo "Kustomize configuration completed"
#  script:
#    - echo "Deploy to ArgoCD"
#    - git config --global user.email "gitlab@gitlab.com"
#    - git config --global user.name "GitLab CI/CD"
#    - git checkout -B prod
#    - git pull origin prod
#    - echo "Current branch $CI_COMMIT_BRANCH"
#    - echo "Git status before commit:"
#    - git status
#    - git remote set-url origin https://nuttapat.inp:glpat-wG8o5UjGGum3Jm5fxzCC@git.lab.tcctech.app/obk/obk-mtel-iam.git
#    - git add kustomization.yaml
#    - git commit -m "[skip ci] deploy argoCD"
#    - git push -u origin prod
#    # - git push --no-verify
#    - echo "Changes pushed to repository"
#  only:
#    refs:
#      - prod
