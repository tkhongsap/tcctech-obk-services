{
  "service": {
    "name": "obk-operation-backend-dev",
    "path": "obk-operation-backend-dev",
    "framework": ".NET",
    "language": "C#",
    "analyzed_at": "2025-07-22T22:23:22.769Z"
  },
  "api_inventory": {
    "endpoints": [
      {
        "method": "GET",
        "path": "api/v1/Polygon",
        "actionName": "GetMembers",
        "controllerName": "MapPolygonController",
        "description": "GET api/v1/Polygon",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/AOCHMap/MapPolygonController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/[controller]/UpsertLocations",
        "actionName": "UpsertLocations",
        "controllerName": "BatchCallController",
        "description": "POST api/v1/[controller]/UpsertLocations",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/BatchCall/BatchCallController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/AppConfig/{name}",
        "actionName": "Get",
        "controllerName": "AppConfigController",
        "description": "GET api/v1/AppConfig/{name}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/AppConfig/AppConfigController.cs",
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/HomeContent/RemoteConfig",
        "actionName": "GetRemoteConfig",
        "controllerName": "HomeContentController",
        "description": "GET api/v1/HomeContent/RemoteConfig",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/HomeContent/HomeContentController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/HomeContent/Versions",
        "actionName": "GetAllVersion",
        "controllerName": "HomeContentController",
        "description": "GET api/v1/HomeContent/Versions",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/HomeContent/HomeContentController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "query",
            "type": "GetVersionsQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/HomeContent/Version/{id}",
        "actionName": "GetVersion",
        "controllerName": "HomeContentController",
        "description": "GET api/v1/HomeContent/Version/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/HomeContent/HomeContentController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/HomeContent/Upload",
        "actionName": "Upload",
        "controllerName": "HomeContentController",
        "description": "POST api/v1/HomeContent/Upload",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/HomeContent/HomeContentController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/HomeContent/Publish",
        "actionName": "Publish",
        "controllerName": "HomeContentController",
        "description": "POST api/v1/HomeContent/Publish",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/HomeContent/HomeContentController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/HomeContent/LatestVersion",
        "actionName": "GetLastedVersion",
        "controllerName": "HomeContentController",
        "description": "GET api/v1/HomeContent/LatestVersion",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/HomeContent/HomeContentController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Members",
        "actionName": "GetMembers",
        "controllerName": "MemberManagementController",
        "description": "GET api/v1/Members",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetMembersQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/MembersOpsApp",
        "actionName": "GetMembersOpsApp",
        "controllerName": "MemberManagementController",
        "description": "GET api/v1/MembersOpsApp",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetMembersOpsAppQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/MembersOpsApp/isActive",
        "actionName": "isActiveAccount",
        "controllerName": "MemberManagementController",
        "description": "POST api/v1/MembersOpsApp/isActive",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "IsActiveAccountCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/MembersOpsApp/UnblockAccount",
        "actionName": "UnblockAccount",
        "controllerName": "MemberManagementController",
        "description": "POST api/v1/MembersOpsApp/UnblockAccount",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UnblockAccountCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Member/{id}",
        "actionName": "GetMember",
        "controllerName": "MemberManagementController",
        "description": "GET api/v1/Member/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/MemberAndSOC/{id}",
        "actionName": "GetMemberAndSOC",
        "controllerName": "MemberManagementController",
        "description": "GET api/v1/MemberAndSOC/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/MemberAndSOCWithOutActive/{id}",
        "actionName": "GetMemberAndSOCWithOutActive",
        "controllerName": "MemberManagementController",
        "description": "GET api/v1/MemberAndSOCWithOutActive/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Member/KeyCloakId/{id}",
        "actionName": "GetMemberByKeyCloakId",
        "controllerName": "MemberManagementController",
        "description": "GET api/v1/Member/KeyCloakId/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Member/InviteMember",
        "actionName": "InviteMember",
        "controllerName": "MemberManagementController",
        "description": "POST api/v1/Member/InviteMember",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "InviteMemberCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Member/ResendInvite",
        "actionName": "ResendInvite",
        "controllerName": "MemberManagementController",
        "description": "POST api/v1/Member/ResendInvite",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/Member",
        "actionName": "UpdateMember",
        "controllerName": "MemberManagementController",
        "description": "PUT api/v1/Member",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateMemberCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/Member/Active",
        "actionName": "ActiveMember",
        "controllerName": "MemberManagementController",
        "description": "PUT api/v1/Member/Active",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateMemberCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/Member/Status",
        "actionName": "UpdateStatusMember",
        "controllerName": "MemberManagementController",
        "description": "PUT api/v1/Member/Status",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateStatusMemberCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/Member/Role",
        "actionName": "UpdateMemberWithRole",
        "controllerName": "MemberManagementController",
        "description": "PUT api/v1/Member/Role",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateMemberWithRoleCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Member/InviteMember",
        "actionName": "CheckInviteMember",
        "controllerName": "MemberManagementController",
        "description": "GET api/v1/Member/InviteMember",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Member/GetMembersByRole/{roleId}",
        "actionName": "GetMemebersByRole",
        "controllerName": "MemberManagementController",
        "description": "GET api/v1/Member/GetMembersByRole/{roleId}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [
          {
            "name": "roleId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Member/ForgotPassword",
        "actionName": "ForgotPassword",
        "controllerName": "MemberManagementController",
        "description": "POST api/v1/Member/ForgotPassword",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "ForgotPasswordCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Member/ResetPassword",
        "actionName": "ResetPassword",
        "controllerName": "MemberManagementController",
        "description": "POST api/v1/Member/ResetPassword",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "ResetPasswordCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Member/VerifyResetPasswordToken/{id}",
        "actionName": "GetResetPassword",
        "controllerName": "MemberManagementController",
        "description": "GET api/v1/Member/VerifyResetPasswordToken/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/MemberManagement/MemberManagementController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Menu",
        "actionName": "GetMenu",
        "controllerName": "MenuController",
        "description": "POST api/v1/Menu",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/Menu/MenuController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetMenuQuery",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/DirectoryContact/List",
        "actionName": "GetDirectoryContacts",
        "controllerName": "DirectoryContactController",
        "description": "GET api/v1/DirectoryContact/List",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/Office/DirectoryContact/DirectoryContactController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetDirectoryContactsQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/DirectoryContact/{id}",
        "actionName": "GetById",
        "controllerName": "DirectoryContactController",
        "description": "GET api/v1/DirectoryContact/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/Office/DirectoryContact/DirectoryContactController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/DirectoryContact/Category",
        "actionName": "CreateCategory",
        "controllerName": "DirectoryContactController",
        "description": "POST api/v1/DirectoryContact/Category",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/Office/DirectoryContact/DirectoryContactController.cs",
        "parameters": [
          {
            "name": "req",
            "type": "CreateDirectoryContactCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/DirectoryContact/Category",
        "actionName": "UpdateCategory",
        "controllerName": "DirectoryContactController",
        "description": "PUT api/v1/DirectoryContact/Category",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/Office/DirectoryContact/DirectoryContactController.cs",
        "parameters": [
          {
            "name": "req",
            "type": "UpdateDirectoryContactCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "DELETE",
        "path": "api/v1/DirectoryContact/category/{id}",
        "actionName": "DeleteCategory",
        "controllerName": "DirectoryContactController",
        "description": "DELETE api/v1/DirectoryContact/category/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/Office/DirectoryContact/DirectoryContactController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/DirectoryContact/Number",
        "actionName": "EditNumber",
        "controllerName": "DirectoryContactController",
        "description": "PUT api/v1/DirectoryContact/Number",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/Office/DirectoryContact/DirectoryContactController.cs",
        "parameters": [
          {
            "name": "req",
            "type": "EditNumberCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Roles",
        "actionName": "GetRoles",
        "controllerName": "RoleMangementController",
        "description": "GET api/v1/Roles",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/RoleManagement/RoleMangementController.cs",
        "parameters": [
          {
            "name": "ID",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "query",
            "type": "GetRolesQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Role/{ID}",
        "actionName": "GetRole",
        "controllerName": "RoleMangementController",
        "description": "GET api/v1/Role/{ID}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/RoleManagement/RoleMangementController.cs",
        "parameters": [
          {
            "name": "ID",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Role/Privileges",
        "actionName": "GetRolePrivileges",
        "controllerName": "RoleMangementController",
        "description": "GET api/v1/Role/Privileges",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/RoleManagement/RoleMangementController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Role",
        "actionName": "CreateRole",
        "controllerName": "RoleMangementController",
        "description": "POST api/v1/Role",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/RoleManagement/RoleMangementController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "CreateRoleCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/Role",
        "actionName": "UpdateRole",
        "controllerName": "RoleMangementController",
        "description": "PUT api/v1/Role",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/RoleManagement/RoleMangementController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateRoleCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/Role/Status",
        "actionName": "UpdateRoleStatus",
        "controllerName": "RoleMangementController",
        "description": "PUT api/v1/Role/Status",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/RoleManagement/RoleMangementController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateStatusRoleCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Role/Privilege",
        "actionName": "CreatePrivilege",
        "controllerName": "RoleMangementController",
        "description": "POST api/v1/Role/Privilege",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/RoleManagement/RoleMangementController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "CreatePrivilegeCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "DELETE",
        "path": "api/v1/Role/Remove/{roleId}",
        "actionName": "RemoveRole",
        "controllerName": "RoleMangementController",
        "description": "DELETE api/v1/Role/Remove/{roleId}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/RoleManagement/RoleMangementController.cs",
        "parameters": [
          {
            "name": "roleId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/user/profile",
        "actionName": "UserProfile",
        "controllerName": "UserCMSController",
        "description": "GET api/v1/operation/user/profile",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/User/UserController.cs",
        "parameters": [
          {
            "name": "kcusername",
            "type": "string",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/user/Users",
        "actionName": "GetUsers",
        "controllerName": "UserCMSController",
        "description": "GET api/v1/operation/user/Users",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/User/UserController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetAllAccountQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/user/MozartSupTech",
        "actionName": "GetMozartSupTechData",
        "controllerName": "UserCMSController",
        "description": "GET api/v1/operation/user/MozartSupTech",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/User/UserController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/user/AhocDataUserMozart",
        "actionName": "AhocDataUserMozart",
        "controllerName": "UserCMSController",
        "description": "GET api/v1/operation/user/AhocDataUserMozart",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/User/UserController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/user/Role",
        "actionName": "UpdateUserRole",
        "controllerName": "UserCMSController",
        "description": "POST api/v1/operation/user/Role",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/User/UserController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "UpdateRoleOpsAppCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/user/OpsappPermission",
        "actionName": "OpsappPermission",
        "controllerName": "UserCMSController",
        "description": "GET api/v1/operation/user/OpsappPermission",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/User/UserController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/user/UpsertFCM",
        "actionName": "UpdateUserRole",
        "controllerName": "UserCMSController",
        "description": "POST api/v1/operation/user/UpsertFCM",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/User/UserController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "UpsertFCMCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/user/UserClientSite",
        "actionName": "UserClientSite",
        "controllerName": "UserCMSController",
        "description": "GET api/v1/operation/user/UserClientSite",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/CMS/User/UserController.cs",
        "parameters": [
          {
            "name": "kcusername",
            "type": "string",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/[controller]/GetDefaultIcon/{defaultIcon}",
        "actionName": "GetDefaultIcon",
        "controllerName": "LBSController",
        "description": "GET api/v1/[controller]/GetDefaultIcon/{defaultIcon}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/LBSController/LBSController.cs",
        "parameters": [
          {
            "name": "defaultIcon",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/[controller]/UploadDefaultIcon",
        "actionName": "GetDefaultIcon",
        "controllerName": "LBSController",
        "description": "POST api/v1/[controller]/UploadDefaultIcon",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/LBSController/LBSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/[controller]/GetBeacons",
        "actionName": "GetListBeacon",
        "controllerName": "LBSController",
        "description": "GET api/v1/[controller]/GetBeacons",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/LBSController/LBSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/[controller]/GetBeaconByUUID/{UUID}",
        "actionName": "GetListBeaconByUUID",
        "controllerName": "LBSController",
        "description": "GET api/v1/[controller]/GetBeaconByUUID/{UUID}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/LBSController/LBSController.cs",
        "parameters": [
          {
            "name": "UUID",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/[controller]/GetBoundaryOBK",
        "actionName": "GetBoundaryOBK",
        "controllerName": "LBSController",
        "description": "GET api/v1/[controller]/GetBoundaryOBK",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/LBSController/LBSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Marcom/MarcomBanner/Publish",
        "actionName": "BannerPublish",
        "controllerName": "MarcomController",
        "description": "POST api/v1/Marcom/MarcomBanner/Publish",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Marcom/MarcomBanner/Delete",
        "actionName": "PRBannerDelete",
        "controllerName": "MarcomController",
        "description": "POST api/v1/Marcom/MarcomBanner/Delete",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Marcom/MarcomBanner/{id}",
        "actionName": "GetPRBannerById",
        "controllerName": "MarcomController",
        "description": "GET api/v1/Marcom/MarcomBanner/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Marcom/MarcomBanner",
        "actionName": "GetPRBannerManagement",
        "controllerName": "MarcomController",
        "description": "GET api/v1/Marcom/MarcomBanner",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetAllMarcomBannerManagementQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Marcom/PRBannerManagement/GetInitial",
        "actionName": "GetInitialBanner",
        "controllerName": "MarcomController",
        "description": "GET api/v1/Marcom/PRBannerManagement/GetInitial",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "InitialMarcomBannerQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Marcom/Marcom/ChangeOrder",
        "actionName": "ChangeOrder",
        "controllerName": "MarcomController",
        "description": "POST api/v1/Marcom/Marcom/ChangeOrder",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Marcom/Event/Publish",
        "actionName": "EventPublish",
        "controllerName": "MarcomController",
        "description": "POST api/v1/Marcom/Event/Publish",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Marcom/Event/Delete",
        "actionName": "EventDelete",
        "controllerName": "MarcomController",
        "description": "POST api/v1/Marcom/Event/Delete",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Marcom/Event/{id}",
        "actionName": "GetEventById",
        "controllerName": "MarcomController",
        "description": "GET api/v1/Marcom/Event/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Marcom/Event",
        "actionName": "GetEvent",
        "controllerName": "MarcomController",
        "description": "GET api/v1/Marcom/Event",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetAllEventQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Marcom/Explore/Publish",
        "actionName": "ExplorePublish",
        "controllerName": "MarcomController",
        "description": "POST api/v1/Marcom/Explore/Publish",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Marcom/Explore",
        "actionName": "GetExplore",
        "controllerName": "MarcomController",
        "description": "GET api/v1/Marcom/Explore",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetAllExploreQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Marcom/Explore/{id}",
        "actionName": "GetExploreById",
        "controllerName": "MarcomController",
        "description": "GET api/v1/Marcom/Explore/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Marcom/Explore/Delete",
        "actionName": "ExploreDelete",
        "controllerName": "MarcomController",
        "description": "POST api/v1/Marcom/Explore/Delete",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Marcom/Happening/Publish",
        "actionName": "HappeningPublish",
        "controllerName": "MarcomController",
        "description": "POST api/v1/Marcom/Happening/Publish",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Marcom/Category",
        "actionName": "GetCategory",
        "controllerName": "MarcomController",
        "description": "GET api/v1/Marcom/Category",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetAllCategoryQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Marcom/Happening/{id}",
        "actionName": "GetHappeningById",
        "controllerName": "MarcomController",
        "description": "GET api/v1/Marcom/Happening/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Marcom/Content",
        "actionName": "GetContent",
        "controllerName": "MarcomController",
        "description": "GET api/v1/Marcom/Content",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetAllContentQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Marcom/Happening/Category",
        "actionName": "GetCategoryList",
        "controllerName": "MarcomController",
        "description": "GET api/v1/Marcom/Happening/Category",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "CategoryListQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Marcom/Happening/Delete",
        "actionName": "HappeningDelete",
        "controllerName": "MarcomController",
        "description": "POST api/v1/Marcom/Happening/Delete",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Marcom/Marcom/SaveConfig",
        "actionName": "SaveConfig",
        "controllerName": "MarcomController",
        "description": "POST api/v1/Marcom/Marcom/SaveConfig",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarComController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/MarcomMobile/GetContent",
        "actionName": "GetContent",
        "controllerName": "MarcomMobileController",
        "description": "POST api/v1/MarcomMobile/GetContent",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarcomMobileController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/MarcomMobile/GetWhatHappenAll",
        "actionName": "GetWhatHappenAll",
        "controllerName": "MarcomMobileController",
        "description": "POST api/v1/MarcomMobile/GetWhatHappenAll",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarcomMobileController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/MarcomMobile/GetContentDetail",
        "actionName": "GetContentDetail",
        "controllerName": "MarcomMobileController",
        "description": "POST api/v1/MarcomMobile/GetContentDetail",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarcomMobileController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/MarcomMobile/ClearCache",
        "actionName": "ClearCache",
        "controllerName": "MarcomMobileController",
        "description": "POST api/v1/MarcomMobile/ClearCache",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/MarCom/MarcomMobileController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/mobile/v1/authentication/Login",
        "actionName": "Login",
        "controllerName": "AuthenticationController",
        "description": "POST api/mobile/v1/authentication/Login",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/Authentication/AuthenticationController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "LoginCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/mobile/v1/authentication/Register",
        "actionName": "Register",
        "controllerName": "AuthenticationController",
        "description": "POST api/mobile/v1/authentication/Register",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/Authentication/AuthenticationController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "CreateUserKCCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/mobile/v1/authentication/OauthToken",
        "actionName": "OauthToken",
        "controllerName": "AuthenticationController",
        "description": "GET api/mobile/v1/authentication/OauthToken",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/Authentication/AuthenticationController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/mobile/v1/authentication/Login",
        "actionName": "Login",
        "controllerName": "AuthenticationController",
        "description": "POST api/mobile/v1/authentication/Login",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/Authentication/AuthenticationController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "LoginCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/mobile/v1/authentication/Register",
        "actionName": "Register",
        "controllerName": "AuthenticationController",
        "description": "POST api/mobile/v1/authentication/Register",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/Authentication/AuthenticationController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "CreateUserKCCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/mobile/v1/authentication/OauthToken",
        "actionName": "OauthToken",
        "controllerName": "AuthenticationController",
        "description": "GET api/mobile/v1/authentication/OauthToken",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/Authentication/AuthenticationController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/mobile/v1/authentication/KeycloalToken",
        "actionName": "KeycloakToken",
        "controllerName": "AuthenticationController",
        "description": "GET api/mobile/v1/authentication/KeycloalToken",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/Authentication/AuthenticationController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/mobile/v1/TimeSheet/StampTimeSheet",
        "actionName": "StampTimeSheet",
        "controllerName": "TimeSheetController",
        "description": "POST api/mobile/v1/TimeSheet/StampTimeSheet",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/TimeSheet/TimeSheetController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "StampTimeSheetCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/mobile/v1/TimeSheet/Check",
        "actionName": "CheckTimeSheet",
        "controllerName": "TimeSheetController",
        "description": "GET api/mobile/v1/TimeSheet/Check",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/TimeSheet/TimeSheetController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "CheckTimeSheetQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/mobile/v1/masterdata/CaseIncident",
        "actionName": "CreateIncident",
        "controllerName": "SOCController",
        "description": "POST api/mobile/v1/masterdata/CaseIncident",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/WorkList/SOC/SOCController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "string",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/mobile/v1/WorkList/TodoList",
        "actionName": "TodoList",
        "controllerName": "WorkListController",
        "description": "GET api/mobile/v1/WorkList/TodoList",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/WorkList/WorkListController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "GetTodoListQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/mobile/v1/WorkList/WorkListDetail",
        "actionName": "WorkListDetail",
        "controllerName": "WorkListController",
        "description": "GET api/mobile/v1/WorkList/WorkListDetail",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/WorkList/WorkListController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "GetWorkListDetailQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/mobile/v1/WorkList/SubmitWork",
        "actionName": "SubmitWork",
        "controllerName": "WorkListController",
        "description": "PUT api/mobile/v1/WorkList/SubmitWork",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/WorkList/WorkListController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "SubmitWorkCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/mobile/v1/WorkList/SubmitHistory",
        "actionName": "SubmitHistory",
        "controllerName": "WorkListController",
        "description": "GET api/mobile/v1/WorkList/SubmitHistory",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/WorkList/WorkListController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "SubmitWorkCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/mobile/v1/WorkList/RejectWork",
        "actionName": "RejectWork",
        "controllerName": "WorkListController",
        "description": "POST api/mobile/v1/WorkList/RejectWork",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/WorkList/WorkListController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "RejectWorkCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/mobile/v1/WorkList/AcknowledgeWork",
        "actionName": "AcknowledgeWork",
        "controllerName": "WorkListController",
        "description": "POST api/mobile/v1/WorkList/AcknowledgeWork",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/WorkList/WorkListController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "AcknowledgeWorkCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/mobile/v1/WorkListSecurity/TodoList",
        "actionName": "TodoList",
        "controllerName": "WorkListSecurityController",
        "description": "GET api/mobile/v1/WorkListSecurity/TodoList",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/WorkList/WorkListSecurityController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "GetTodoListQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/mobile/v1/WorkListSecurity/WorkListSecurityDetail",
        "actionName": "WorkListSecurityDetail",
        "controllerName": "WorkListSecurityController",
        "description": "GET api/mobile/v1/WorkListSecurity/WorkListSecurityDetail",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/WorkList/WorkListSecurityController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "GetWorkListSecurityDetailQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/mobile/v1/WorkListSecurity/SubmitWork",
        "actionName": "SubmitWork",
        "controllerName": "WorkListSecurityController",
        "description": "PUT api/mobile/v1/WorkListSecurity/SubmitWork",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/WorkList/WorkListSecurityController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "SubmitWorkCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/mobile/v1/WorkListSecurity/SubmitHistory",
        "actionName": "SubmitHistory",
        "controllerName": "WorkListSecurityController",
        "description": "GET api/mobile/v1/WorkListSecurity/SubmitHistory",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/WorkList/WorkListSecurityController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "SubmitWorkCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/mobile/v1/WorkListSecurity/RejectWork",
        "actionName": "RejectWork",
        "controllerName": "WorkListSecurityController",
        "description": "POST api/mobile/v1/WorkListSecurity/RejectWork",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/WorkList/WorkListSecurityController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "RejectWorkCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/mobile/v1/WorkListSecurity/AcknowledgeWork",
        "actionName": "AcknowledgeWork",
        "controllerName": "WorkListSecurityController",
        "description": "POST api/mobile/v1/WorkListSecurity/AcknowledgeWork",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Mobile/WorkList/WorkListSecurityController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "AcknowledgeWorkCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Attendant/import",
        "actionName": "ImportLog",
        "controllerName": "AttendanceController",
        "description": "POST api/v1/Attendant/import",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Attendance/AttendanceController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "ImportLogCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/common/GetImageData",
        "actionName": "GetImageData",
        "controllerName": "CronJobController",
        "description": "GET api/v1/common/GetImageData",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Common/CommonController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "GetImageQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/cronjob/SyncPPM",
        "actionName": "UpsertPPM",
        "controllerName": "CronJobController",
        "description": "POST api/v1/cronjob/SyncPPM",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/CronJob/CronJobController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpsertPPMCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Tasks",
        "actionName": "GetTasks",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/Tasks",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetTaskListQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Task/{id}",
        "actionName": "GetTaskById",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/Task/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/Task/status",
        "actionName": "UpdateTaskStatus",
        "controllerName": "GuardTourController",
        "description": "PUT api/v1/Task/status",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateTaskStatusCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/TaskSubTasks/create",
        "actionName": "CreateTaskSubTask",
        "controllerName": "GuardTourController",
        "description": "POST api/v1/TaskSubTasks/create",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "CreateTaskSubtaskCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/TaskSubTasks/update",
        "actionName": "UpdateTaskSubtask",
        "controllerName": "GuardTourController",
        "description": "PUT api/v1/TaskSubTasks/update",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateTaskSubtaskCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Subtasks",
        "actionName": "GetSubtask",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/Subtasks",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetSubtaskQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Task/CheckDuplicate",
        "actionName": "CheckTaskDuplicate",
        "controllerName": "GuardTourController",
        "description": "POST api/v1/Task/CheckDuplicate",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "CheckTaskDuplicateQuery",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/Action/Status",
        "actionName": "UpdateAction",
        "controllerName": "GuardTourController",
        "description": "PUT api/v1/Action/Status",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateStatusActionCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/Subtask/Status",
        "actionName": "UpdateSubtask",
        "controllerName": "GuardTourController",
        "description": "PUT api/v1/Subtask/Status",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateStatusSubtaskCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Actions",
        "actionName": "GetActions",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/Actions",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetActionListQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Action/{id}",
        "actionName": "GetActionById",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/Action/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Action",
        "actionName": "CreateAction",
        "controllerName": "GuardTourController",
        "description": "POST api/v1/Action",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "CreateActionCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/Action",
        "actionName": "UpdateAction",
        "controllerName": "GuardTourController",
        "description": "PUT api/v1/Action",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateActionCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "DELETE",
        "path": "api/v1/Action/{actionId}",
        "actionName": "RemoveAction",
        "controllerName": "GuardTourController",
        "description": "DELETE api/v1/Action/{actionId}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "actionId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/ActionTypes",
        "actionName": "GetActionTypes",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/ActionTypes",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetActionTypeListQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/ActionType/{id}",
        "actionName": "GetActionTypeById",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/ActionType/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/ActionType",
        "actionName": "CreateActionType",
        "controllerName": "GuardTourController",
        "description": "POST api/v1/ActionType",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "CreateActionTypeCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/ActionType",
        "actionName": "UpdateActionType",
        "controllerName": "GuardTourController",
        "description": "PUT api/v1/ActionType",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateActionTypeCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "DELETE",
        "path": "api/v1/ActionType/{actionId}",
        "actionName": "RemoveActionType",
        "controllerName": "GuardTourController",
        "description": "DELETE api/v1/ActionType/{actionId}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "actionId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/ActivityProcedures",
        "actionName": "GetActicityProcedure",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/ActivityProcedures",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetActivityProcedureListQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/ActivityProcedure/{id}",
        "actionName": "GetActicityProcedureDetail",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/ActivityProcedure/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/ActivityProcedure/CheckDuplicate",
        "actionName": "CheckDuplicateActicityProcedure",
        "controllerName": "GuardTourController",
        "description": "POST api/v1/ActivityProcedure/CheckDuplicate",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/ActivityProcedure",
        "actionName": "CreateActicityProcedure",
        "controllerName": "GuardTourController",
        "description": "POST api/v1/ActivityProcedure",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/ActivityProcedure/{id}",
        "actionName": "UpdateActicityProcedure",
        "controllerName": "GuardTourController",
        "description": "PUT api/v1/ActivityProcedure/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "DELETE",
        "path": "api/v1/ActivityProcedure/{id}",
        "actionName": "DeleteActicityProcedure",
        "controllerName": "GuardTourController",
        "description": "DELETE api/v1/ActivityProcedure/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/SchedulePlans",
        "actionName": "GetSchedulePlans",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/SchedulePlans",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetSchedulePlanListQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/SchedulePlan/{id}",
        "actionName": "GetSchedulePlanById",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/SchedulePlan/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/SchedulePlan",
        "actionName": "CreateSchedulePlan",
        "controllerName": "GuardTourController",
        "description": "POST api/v1/SchedulePlan",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "CreateSchedulePlanCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/SchedulePlan",
        "actionName": "UpdateSchedulePlan",
        "controllerName": "GuardTourController",
        "description": "PUT api/v1/SchedulePlan",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateSchedulePlanCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "DELETE",
        "path": "api/v1/SchedulePlan/{actionId}",
        "actionName": "RemoveSchedulePlan",
        "controllerName": "GuardTourController",
        "description": "DELETE api/v1/SchedulePlan/{actionId}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "actionId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/SchedulePlan/process",
        "actionName": "ProcessSchedulePlan",
        "controllerName": "GuardTourController",
        "description": "POST api/v1/SchedulePlan/process",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "ProcessSchedulePlanCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Shift",
        "actionName": "GetShiftList",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/Shift",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetShiftListQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Shift/{id}",
        "actionName": "GetShiftById",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/Shift/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Shift",
        "actionName": "CreateShift",
        "controllerName": "GuardTourController",
        "description": "POST api/v1/Shift",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "CreateShiftCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/Shift",
        "actionName": "UpdateShift",
        "controllerName": "GuardTourController",
        "description": "PUT api/v1/Shift",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateShiftCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "DELETE",
        "path": "api/v1/Shift/{id}",
        "actionName": "RemoveShift",
        "controllerName": "GuardTourController",
        "description": "DELETE api/v1/Shift/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/ManPower",
        "actionName": "GetShiftManPowerList",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/ManPower",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetShiftManPowerListQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/ManPower/{id}",
        "actionName": "GetShiftManPowerById",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/ManPower/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/ManPower/upsert",
        "actionName": "Upsert",
        "controllerName": "GuardTourController",
        "description": "POST api/v1/ManPower/upsert",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpsertShiftManPowerCommandCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "DELETE",
        "path": "api/v1/ManPower/{id}",
        "actionName": "RemoveShiftManPower",
        "controllerName": "GuardTourController",
        "description": "DELETE api/v1/ManPower/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Location",
        "actionName": "CreateLocation",
        "controllerName": "GuardTourController",
        "description": "POST api/v1/Location",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "CreateLocationCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "DELETE",
        "path": "api/v1/Location/{id}",
        "actionName": "RemoveLocation",
        "controllerName": "GuardTourController",
        "description": "DELETE api/v1/Location/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Location",
        "actionName": "GetLocations",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/Location",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetLocationListQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Location/{id}",
        "actionName": "GetLocationById",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/Location/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/Location",
        "actionName": "UpdateLocation",
        "controllerName": "GuardTourController",
        "description": "PUT api/v1/Location",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateLocationCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/User/Member",
        "actionName": "GetUserGuardTour",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/User/Member",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/GuardTour/GuardTourController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/authentication/Login",
        "actionName": "Login",
        "controllerName": "AuthenticationController",
        "description": "POST api/v1/operation/mobile/authentication/Login",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Authentication/AuthenticationController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "LoginCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/authentication/RefreshToken",
        "actionName": "RefreshToken",
        "controllerName": "AuthenticationController",
        "description": "POST api/v1/operation/mobile/authentication/RefreshToken",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Authentication/AuthenticationController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/authentication/Register",
        "actionName": "Register",
        "controllerName": "AuthenticationController",
        "description": "POST api/v1/operation/mobile/authentication/Register",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Authentication/AuthenticationController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "CreateUserKCCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/authentication/OauthToken",
        "actionName": "OauthToken",
        "controllerName": "AuthenticationController",
        "description": "GET api/v1/operation/mobile/authentication/OauthToken",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Authentication/AuthenticationController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/authentication/UATLogin",
        "actionName": "UATLogin",
        "controllerName": "AuthenticationController",
        "description": "POST api/v1/operation/mobile/authentication/UATLogin",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Authentication/AuthenticationController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "UATLoginCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/authentication/Logout",
        "actionName": "Logout",
        "controllerName": "AuthenticationController",
        "description": "POST api/v1/operation/mobile/authentication/Logout",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Authentication/AuthenticationController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "LogoutCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/operation/mobile/authentication/EventsLog",
        "actionName": "EventsLog",
        "controllerName": "AuthenticationController",
        "description": "PUT api/v1/operation/mobile/authentication/EventsLog",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Authentication/AuthenticationController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "CreateEventlogCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/cwo/Detail",
        "actionName": "CWODetail",
        "controllerName": "CWOController",
        "description": "GET api/v1/operation/mobile/cwo/Detail",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/CWO/CWOController.cs",
        "parameters": [
          {
            "name": "cwoid",
            "type": "int",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/cwo/Assign/Technician",
        "actionName": "AssignTechnician",
        "controllerName": "CWOController",
        "description": "POST api/v1/operation/mobile/cwo/Assign/Technician",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/CWO/CWOController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "AssignTechnicianCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/cwo/Reject/Technician",
        "actionName": "RejectTechnician",
        "controllerName": "CWOController",
        "description": "POST api/v1/operation/mobile/cwo/Reject/Technician",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/CWO/CWOController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "RejectTechnicianCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/cwo/Reject/Supervisor",
        "actionName": "RejectSupervisor",
        "controllerName": "CWOController",
        "description": "POST api/v1/operation/mobile/cwo/Reject/Supervisor",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/CWO/CWOController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "RejectSupervisorCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/cwo/Acknowledge",
        "actionName": "TechnicainAcknowledge",
        "controllerName": "CWOController",
        "description": "POST api/v1/operation/mobile/cwo/Acknowledge",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/CWO/CWOController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "TechnicainAcknowledgeCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/cwo/Pause",
        "actionName": "TechnicainPause",
        "controllerName": "CWOController",
        "description": "POST api/v1/operation/mobile/cwo/Pause",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/CWO/CWOController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "PauseWorkCWOCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/cwo/Resume",
        "actionName": "TechnicainResume",
        "controllerName": "CWOController",
        "description": "POST api/v1/operation/mobile/cwo/Resume",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/CWO/CWOController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "ResumeWorkCWOCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/cwo/Completed",
        "actionName": "TechnicainCompleted",
        "controllerName": "CWOController",
        "description": "POST api/v1/operation/mobile/cwo/Completed",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/CWO/CWOController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "CompleteCWOCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/cwo/Close",
        "actionName": "SupervisorClose",
        "controllerName": "CWOController",
        "description": "POST api/v1/operation/mobile/cwo/Close",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/CWO/CWOController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "CloseCWOCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/cwo/Rework",
        "actionName": "SupervisorRework",
        "controllerName": "CWOController",
        "description": "POST api/v1/operation/mobile/cwo/Rework",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/CWO/CWOController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "ReworkCWOCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/cwo/Transactions/{cwoId}",
        "actionName": "Transactions",
        "controllerName": "CWOController",
        "description": "GET api/v1/operation/mobile/cwo/Transactions/{cwoId}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/CWO/CWOController.cs",
        "parameters": [
          {
            "name": "cwoId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/cwo/Options",
        "actionName": "CreateOptionsCWO",
        "controllerName": "CWOController",
        "description": "GET api/v1/operation/mobile/cwo/Options",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/CWO/CWOController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/cwo/Component",
        "actionName": "GetComponent",
        "controllerName": "CWOController",
        "description": "GET api/v1/operation/mobile/cwo/Component",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/CWO/CWOController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/cwo/Supervisor",
        "actionName": "GetSupervisor",
        "controllerName": "CWOController",
        "description": "GET api/v1/operation/mobile/cwo/Supervisor",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/CWO/CWOController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/cwo/SyncCWO",
        "actionName": "UpsertCWO",
        "controllerName": "CWOController",
        "description": "POST api/v1/operation/mobile/cwo/SyncCWO",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/CWO/CWOController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpsertCWOCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/Case/SyncCase",
        "actionName": "UpsertCases",
        "controllerName": "CaseController",
        "description": "POST api/v1/operation/mobile/Case/SyncCase",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Case/CaseController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpsertCasesCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/Case/List",
        "actionName": "GetTasks",
        "controllerName": "CaseController",
        "description": "GET api/v1/operation/mobile/Case/List",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Case/CaseController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetCaseListQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/Case/{id}",
        "actionName": "GetCaseById",
        "controllerName": "CaseController",
        "description": "GET api/v1/operation/mobile/Case/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Case/CaseController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/Case/CaseTasks/List",
        "actionName": "GetCaseTasks",
        "controllerName": "CaseController",
        "description": "GET api/v1/operation/mobile/Case/CaseTasks/List",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Case/CaseController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetCaseTasksListQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/Case/CaseTasks/{id}",
        "actionName": "GetCaseTaskById",
        "controllerName": "CaseController",
        "description": "GET api/v1/operation/mobile/Case/CaseTasks/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Case/CaseController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/Case/CaseTask/Update",
        "actionName": "UpdateCaseTask",
        "controllerName": "CaseController",
        "description": "POST api/v1/operation/mobile/Case/CaseTask/Update",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Case/CaseController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateTaskCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/Case/Create/Options",
        "actionName": "CreateCaseOption",
        "controllerName": "CaseController",
        "description": "GET api/v1/operation/mobile/Case/Create/Options",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Case/CaseController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/Case/Create/Location",
        "actionName": "CreateCaseLocationOption",
        "controllerName": "CaseController",
        "description": "GET api/v1/operation/mobile/Case/Create/Location",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Case/CaseController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/Case/Adhoc/CreateMedia",
        "actionName": "AdhocCreateMedia",
        "controllerName": "CaseController",
        "description": "POST api/v1/operation/mobile/Case/Adhoc/CreateMedia",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Case/CaseController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UploadMediaCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/document/Upload",
        "actionName": "Upload",
        "controllerName": "DocumentController",
        "description": "POST api/v1/operation/mobile/document/Upload",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Document/DocumentController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/document/Upload/Video",
        "actionName": "UploadVideo",
        "controllerName": "DocumentController",
        "description": "POST api/v1/operation/mobile/document/Upload/Video",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Document/DocumentController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/document/GetFiles/{objectType}",
        "actionName": "GetFiles",
        "controllerName": "DocumentController",
        "description": "GET api/v1/operation/mobile/document/GetFiles/{objectType}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Document/DocumentController.cs",
        "parameters": [
          {
            "name": "objectType",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/document/GetFiles/{objectType}/{objectKey}",
        "actionName": "GetFilesByObjectKey",
        "controllerName": "DocumentController",
        "description": "GET api/v1/operation/mobile/document/GetFiles/{objectType}/{objectKey}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Document/DocumentController.cs",
        "parameters": [
          {
            "name": "objectType",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "objectKey",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/document/GetImage/{id}",
        "actionName": "GetImage",
        "controllerName": "DocumentController",
        "description": "GET api/v1/operation/mobile/document/GetImage/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Document/DocumentController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/guard-tour/Tasks",
        "actionName": "GetTasks",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/operation/mobile/guard-tour/Tasks",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "query",
            "type": "GetTaskListQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/guard-tour/Task/{id}",
        "actionName": "GetTaskById",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/operation/mobile/guard-tour/Task/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/operation/mobile/guard-tour/Task/status",
        "actionName": "UpdateTaskStatus",
        "controllerName": "GuardTourController",
        "description": "PUT api/v1/operation/mobile/guard-tour/Task/status",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateTaskStatusCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/guard-tour/Subtasks",
        "actionName": "GetSubtask",
        "controllerName": "GuardTourController",
        "description": "GET api/v1/operation/mobile/guard-tour/Subtasks",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetSubtaskQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/operation/mobile/guard-tour/Action/Status",
        "actionName": "UpdateAction",
        "controllerName": "GuardTourController",
        "description": "PUT api/v1/operation/mobile/guard-tour/Action/Status",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateStatusActionCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/operation/mobile/guard-tour/Subtask/Status",
        "actionName": "UpdateSubtask",
        "controllerName": "GuardTourController",
        "description": "PUT api/v1/operation/mobile/guard-tour/Subtask/Status",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/GuardTour/GuardTourController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpdateStatusSubtaskCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/masterdata/Supervisor",
        "actionName": "GetListSupervisor",
        "controllerName": "MasterDataController",
        "description": "GET api/v1/operation/mobile/masterdata/Supervisor",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/MasterData/MasterDataController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/masterdata/Technician",
        "actionName": "GetListTechnician",
        "controllerName": "MasterDataController",
        "description": "GET api/v1/operation/mobile/masterdata/Technician",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/MasterData/MasterDataController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "TechnicianQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/masterdata/CaseIncident/EventType",
        "actionName": "CaseIncidentEventType",
        "controllerName": "MasterDataController",
        "description": "GET api/v1/operation/mobile/masterdata/CaseIncident/EventType",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/MasterData/MasterDataController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/masterdata/CaseIncident/Location",
        "actionName": "CaseIncidentLocation",
        "controllerName": "MasterDataController",
        "description": "GET api/v1/operation/mobile/masterdata/CaseIncident/Location",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/MasterData/MasterDataController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/masterdata/OpsAppRoles",
        "actionName": "GetOpsAppRoles",
        "controllerName": "MasterDataController",
        "description": "GET api/v1/operation/mobile/masterdata/OpsAppRoles",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/MasterData/MasterDataController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/masterdata/Locations",
        "actionName": "GetLocationByType",
        "controllerName": "MasterDataController",
        "description": "GET api/v1/operation/mobile/masterdata/Locations",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/MasterData/MasterDataController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "LocationsByTypeQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/masterdata/Location",
        "actionName": "GetLocationByRefId",
        "controllerName": "MasterDataController",
        "description": "GET api/v1/operation/mobile/masterdata/Location",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/MasterData/MasterDataController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "LocationByRefIdQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/masterdata/FunctionRoles",
        "actionName": "GetFunctionRoles",
        "controllerName": "MasterDataController",
        "description": "GET api/v1/operation/mobile/masterdata/FunctionRoles",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/MasterData/MasterDataController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/masterdata/CWOTypes",
        "actionName": "GetCWOType",
        "controllerName": "MasterDataController",
        "description": "GET api/v1/operation/mobile/masterdata/CWOTypes",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/MasterData/MasterDataController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/masterdata/PrombleTypes",
        "actionName": "GetPrombleTypes",
        "controllerName": "MasterDataController",
        "description": "GET api/v1/operation/mobile/masterdata/PrombleTypes",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/MasterData/MasterDataController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/masterdata/Priority",
        "actionName": "GetPriority",
        "controllerName": "MasterDataController",
        "description": "GET api/v1/operation/mobile/masterdata/Priority",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/MasterData/MasterDataController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/masterdata/Asset",
        "actionName": "GetAsset",
        "controllerName": "MasterDataController",
        "description": "GET api/v1/operation/mobile/masterdata/Asset",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/MasterData/MasterDataController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/masterdata/ClientSite",
        "actionName": "GetClientSite",
        "controllerName": "MasterDataController",
        "description": "GET api/v1/operation/mobile/masterdata/ClientSite",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/MasterData/MasterDataController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "ClientSiteQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/masterdata/ClientSiteByMID",
        "actionName": "GetClientSite",
        "controllerName": "MasterDataController",
        "description": "GET api/v1/operation/mobile/masterdata/ClientSiteByMID",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/MasterData/MasterDataController.cs",
        "parameters": [
          {
            "name": "mid",
            "type": "Guid",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/notification/Announce",
        "actionName": "SendAnnounce",
        "controllerName": "NotificationController",
        "description": "POST api/v1/operation/mobile/notification/Announce",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Notification/NotificationController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "SendAnnounceCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/notification/Send",
        "actionName": "SendFCMNotification",
        "controllerName": "NotificationController",
        "description": "POST api/v1/operation/mobile/notification/Send",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Notification/NotificationController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "SendFCMNotiCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/notification/ReadNotification",
        "actionName": "ReadFCMNotification",
        "controllerName": "NotificationController",
        "description": "POST api/v1/operation/mobile/notification/ReadNotification",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Notification/NotificationController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "ReadNotificationCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/notification/{id}",
        "actionName": "SendFCMNotification",
        "controllerName": "NotificationController",
        "description": "GET api/v1/operation/mobile/notification/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Notification/NotificationController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/notification/ChangeAppLangues",
        "actionName": "ChangeAppLangues",
        "controllerName": "NotificationController",
        "description": "POST api/v1/operation/mobile/notification/ChangeAppLangues",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Notification/NotificationController.cs",
        "parameters": [
          {
            "name": "req",
            "type": "ChangeLanguestDeviceCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/notification/Remove/{deviceid}",
        "actionName": "RemoveDevice",
        "controllerName": "NotificationController",
        "description": "POST api/v1/operation/mobile/notification/Remove/{deviceid}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Notification/NotificationController.cs",
        "parameters": [
          {
            "name": "deviceid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/notification/Remove/Device",
        "actionName": "RemoveDeviceLogin",
        "controllerName": "NotificationController",
        "description": "POST api/v1/operation/mobile/notification/Remove/Device",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/Notification/NotificationController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "RemoveDeviceAndTokenCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/ppm/Detail",
        "actionName": "PPMDetail",
        "controllerName": "PPMController",
        "description": "GET api/v1/operation/mobile/ppm/Detail",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/PPM/PPMController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "int",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/ppm/Assign/Technician",
        "actionName": "AssignTechnician",
        "controllerName": "PPMController",
        "description": "POST api/v1/operation/mobile/ppm/Assign/Technician",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/PPM/PPMController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "AssignTechnicianPPMCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/ppm/Reject/Supervisor",
        "actionName": "RejectSupervisor",
        "controllerName": "PPMController",
        "description": "POST api/v1/operation/mobile/ppm/Reject/Supervisor",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/PPM/PPMController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "RejectSupervisorPPMCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/ppm/Reject/Technician",
        "actionName": "RejectTechnician",
        "controllerName": "PPMController",
        "description": "POST api/v1/operation/mobile/ppm/Reject/Technician",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/PPM/PPMController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "RejectTechnicianPPMCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/ppm/Acknowledge",
        "actionName": "TechnicainAcknowledge",
        "controllerName": "PPMController",
        "description": "POST api/v1/operation/mobile/ppm/Acknowledge",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/PPM/PPMController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "AcknowlegePPMCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/ppm/Task/Update",
        "actionName": "TechnicainUpdateTask",
        "controllerName": "PPMController",
        "description": "POST api/v1/operation/mobile/ppm/Task/Update",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/PPM/PPMController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "TaskUpdatePPMCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/ppm/Completed",
        "actionName": "TechnicainCompleted",
        "controllerName": "PPMController",
        "description": "POST api/v1/operation/mobile/ppm/Completed",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/PPM/PPMController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "CompletedPPMCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/ppm/Close",
        "actionName": "SupervisorClose",
        "controllerName": "PPMController",
        "description": "POST api/v1/operation/mobile/ppm/Close",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/PPM/PPMController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "ClosePPMCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/ppm/Rework",
        "actionName": "SupervisorRework",
        "controllerName": "PPMController",
        "description": "POST api/v1/operation/mobile/ppm/Rework",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/PPM/PPMController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "ReworkPPMCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/ppm/Comment",
        "actionName": "GetPPMComment",
        "controllerName": "PPMController",
        "description": "GET api/v1/operation/mobile/ppm/Comment",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/PPM/PPMController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "int",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/ppm/Transaction",
        "actionName": "GetPPMTransaction",
        "controllerName": "PPMController",
        "description": "GET api/v1/operation/mobile/ppm/Transaction",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/PPM/PPMController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "int",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/ppm/ConfirmCompleted",
        "actionName": "TechnicainConfirmComplete",
        "controllerName": "PPMController",
        "description": "POST api/v1/operation/mobile/ppm/ConfirmCompleted",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/PPM/PPMController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "ConfirmCompletePPMCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/SOC/Detail",
        "actionName": "DetailIncident",
        "controllerName": "SOCController",
        "description": "GET api/v1/operation/mobile/SOC/Detail",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/SOC/SOCController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "int",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/SOC/CaseIncidentList",
        "actionName": "CaseIncidentList",
        "controllerName": "SOCController",
        "description": "GET api/v1/operation/mobile/SOC/CaseIncidentList",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/SOC/SOCController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/SOC/CaseIncidentDetail/{id}",
        "actionName": "CaseIncidentDetail",
        "controllerName": "SOCController",
        "description": "GET api/v1/operation/mobile/SOC/CaseIncidentDetail/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/SOC/SOCController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/SOC/CreateCaseIncident",
        "actionName": "CreateCaseIncident",
        "controllerName": "SOCController",
        "description": "POST api/v1/operation/mobile/SOC/CreateCaseIncident",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/SOC/SOCController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "CreateCaseIncidentCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/SOC/CaseIncident/{caseId}/Tasks",
        "actionName": "CaseIncidentTasks",
        "controllerName": "SOCController",
        "description": "GET api/v1/operation/mobile/SOC/CaseIncident/{caseId}/Tasks",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/SOC/SOCController.cs",
        "parameters": [
          {
            "name": "caseId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/SOC/CompleteTaskCaseIncident",
        "actionName": "CompleteTaskCaseIncident",
        "controllerName": "SOCController",
        "description": "POST api/v1/operation/mobile/SOC/CompleteTaskCaseIncident",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/SOC/SOCController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "CompleteTaskCaseIncidentCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/SOC/UpdateTaskCaseIncident",
        "actionName": "UpdateTaskCaseIncident",
        "controllerName": "SOCController",
        "description": "POST api/v1/operation/mobile/SOC/UpdateTaskCaseIncident",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/SOC/SOCController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "UpdateTaskCaseIncidentCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/user/profile",
        "actionName": "UserProfile",
        "controllerName": "UserController",
        "description": "GET api/v1/operation/mobile/user/profile",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/User/UserController.cs",
        "parameters": [
          {
            "name": "kcusername",
            "type": "string",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/user/Users",
        "actionName": "GetUsers",
        "controllerName": "UserController",
        "description": "GET api/v1/operation/mobile/user/Users",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/User/UserController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetAllAccountQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/user/MozartSupTech",
        "actionName": "GetMozartSupTechData",
        "controllerName": "UserController",
        "description": "GET api/v1/operation/mobile/user/MozartSupTech",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/User/UserController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/user/AhocDataUserMozart",
        "actionName": "AhocDataUserMozart",
        "controllerName": "UserController",
        "description": "GET api/v1/operation/mobile/user/AhocDataUserMozart",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/User/UserController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/user/Role",
        "actionName": "UpdateUserRole",
        "controllerName": "UserController",
        "description": "POST api/v1/operation/mobile/user/Role",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/User/UserController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "UpdateRoleOpsAppCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/user/OpsappPermission",
        "actionName": "OpsappPermission",
        "controllerName": "UserController",
        "description": "GET api/v1/operation/mobile/user/OpsappPermission",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/User/UserController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/user/UpsertFCM",
        "actionName": "UpdateUserRole",
        "controllerName": "UserController",
        "description": "POST api/v1/operation/mobile/user/UpsertFCM",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/User/UserController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "UpsertFCMCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/mobile/user/UserClientSite",
        "actionName": "UserClientSite",
        "controllerName": "UserController",
        "description": "GET api/v1/operation/mobile/user/UserClientSite",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/User/UserController.cs",
        "parameters": [
          {
            "name": "kcusername",
            "type": "string",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/operation/mobile/user/ChangePasswordByUser",
        "actionName": "ChangePasswordMB",
        "controllerName": "UserController",
        "description": "PUT api/v1/operation/mobile/user/ChangePasswordByUser",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/User/UserController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "ChangePasswordMBCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/user/UserClockIn",
        "actionName": "UserClockIn",
        "controllerName": "UserController",
        "description": "POST api/v1/operation/mobile/user/UserClockIn",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/User/UserController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UserClockInCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/mobile/user/UserClockOut",
        "actionName": "UserClockOut",
        "controllerName": "UserController",
        "description": "POST api/v1/operation/mobile/user/UserClockOut",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/Mobile/User/UserController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UserClockOutCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/operation/v1/Work/AttendWork",
        "actionName": "PostAttendWork",
        "controllerName": "OpAppController",
        "description": "POST api/operation/v1/Work/AttendWork",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/OpApp/OpAppController.cs",
        "parameters": [
          {
            "name": "qrcode",
            "type": "string",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/operation/v1/Work/QRCODE/Generate",
        "actionName": "GenerateQRCode",
        "controllerName": "OpAppController",
        "description": "POST api/operation/v1/Work/QRCODE/Generate",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/OpApp/OpAppController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "GenerateQRCodeCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/operation/v1/Work/QRCODE",
        "actionName": "GetQRCodeList",
        "controllerName": "OpAppController",
        "description": "GET api/operation/v1/Work/QRCODE",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/OpApp/OpAppController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/operation/v1/Work/QRScan/TimeCardEntries",
        "actionName": "TimeCardEntries",
        "controllerName": "OpAppController",
        "description": "POST api/operation/v1/Work/QRScan/TimeCardEntries",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/OpApp/OpAppController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "CheckTimeCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/ResetPasswordByAdmin/ResetPasswordToDefault",
        "actionName": "ResetPasswordToDefaultCMS",
        "controllerName": "ResetPasswordCMSController",
        "description": "POST api/v1/ResetPasswordByAdmin/ResetPasswordToDefault",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/ResetPassWordCMS/ResetPassWordCMSController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "ResetPasswordCMSCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/ActivityProcedureByTask/GetTaskActivity",
        "actionName": "GetTaskActicityProcedure",
        "controllerName": "TaskActivityProcedureController",
        "description": "GET api/v1/ActivityProcedureByTask/GetTaskActivity",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/TaskActivityProcedure/TaskActivityProcedureController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/ActivityProcedureByTask/CreateActivityProcedure/ByTask",
        "actionName": "ProcessSchedulePlan",
        "controllerName": "TaskActivityProcedureController",
        "description": "POST api/v1/ActivityProcedureByTask/CreateActivityProcedure/ByTask",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/TaskActivityProcedure/TaskActivityProcedureController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/usageMonitoring/Staff",
        "actionName": "StaffList",
        "controllerName": "UsageMonitoringController",
        "description": "GET api/v1/usageMonitoring/Staff",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/UsageMonitoring/UsageMonitoringController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "GetStaffListQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/usageMonitoring/Staff/{sfid}",
        "actionName": "GetStaffById",
        "controllerName": "UsageMonitoringController",
        "description": "GET api/v1/usageMonitoring/Staff/{sfid}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/UsageMonitoring/UsageMonitoringController.cs",
        "parameters": [
          {
            "name": "sfid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/usageMonitoring/Staff/upsert",
        "actionName": "Upsert",
        "controllerName": "UsageMonitoringController",
        "description": "POST api/v1/usageMonitoring/Staff/upsert",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/UsageMonitoring/UsageMonitoringController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpsertStaffCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "DELETE",
        "path": "api/v1/usageMonitoring/Staff/{sfid}",
        "actionName": "RemoveShift",
        "controllerName": "UsageMonitoringController",
        "description": "DELETE api/v1/usageMonitoring/Staff/{sfid}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/UsageMonitoring/UsageMonitoringController.cs",
        "parameters": [
          {
            "name": "sfid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/usageMonitoring/EventsLog",
        "actionName": "EventsLog",
        "controllerName": "UsageMonitoringController",
        "description": "GET api/v1/usageMonitoring/EventsLog",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/UsageMonitoring/UsageMonitoringController.cs",
        "parameters": [
          {
            "name": "max",
            "type": "int",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/usageMonitoring/Staff/Component",
        "actionName": "StaffComponentList",
        "controllerName": "UsageMonitoringController",
        "description": "GET api/v1/usageMonitoring/Staff/Component",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/UsageMonitoring/UsageMonitoringController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "GetStaffByComponentQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/usageMonitoring/Roster",
        "actionName": "RosterList",
        "controllerName": "UsageMonitoringController",
        "description": "GET api/v1/usageMonitoring/Roster",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/UsageMonitoring/UsageMonitoringController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetRosterListQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/usageMonitoring/Roster/Staff",
        "actionName": "RosterStaff",
        "controllerName": "UsageMonitoringController",
        "description": "GET api/v1/usageMonitoring/Roster/Staff",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/UsageMonitoring/UsageMonitoringController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetRosterStaffQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/usageMonitoring/Roster/{roid}",
        "actionName": "GetRosterById",
        "controllerName": "UsageMonitoringController",
        "description": "GET api/v1/usageMonitoring/Roster/{roid}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/UsageMonitoring/UsageMonitoringController.cs",
        "parameters": [
          {
            "name": "roid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/usageMonitoring/Roster/upsert",
        "actionName": "Upsert",
        "controllerName": "UsageMonitoringController",
        "description": "POST api/v1/usageMonitoring/Roster/upsert",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/UsageMonitoring/UsageMonitoringController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpsertRosterCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "DELETE",
        "path": "api/v1/usageMonitoring/Roster/{id}",
        "actionName": "RemoveRoster",
        "controllerName": "UsageMonitoringController",
        "description": "DELETE api/v1/usageMonitoring/Roster/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/UsageMonitoring/UsageMonitoringController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/usageMonitoring/Summary",
        "actionName": "Summary",
        "controllerName": "UsageMonitoringController",
        "description": "GET api/v1/usageMonitoring/Summary",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/UsageMonitoring/UsageMonitoringController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "SummaryQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/usageMonitoring/SyncSummary",
        "actionName": "SyncSummary",
        "controllerName": "UsageMonitoringController",
        "description": "GET api/v1/usageMonitoring/SyncSummary",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Operation/UsageMonitoring/UsageMonitoringController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "SyncSummaryQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/operation/v1/report/Attendant",
        "actionName": "Attendant",
        "controllerName": "ReportController",
        "description": "GET api/operation/v1/report/Attendant",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Report/ReportController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetReportAttendantQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/operation/v1/report/CheckInCheckOut",
        "actionName": "CheckInCheckOut",
        "controllerName": "ReportController",
        "description": "GET api/operation/v1/report/CheckInCheckOut",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Report/ReportController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetReportCheckInCheckOutQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/operation/v1/report/GuardTour/TaskDetail",
        "actionName": "CheckInCheckOut",
        "controllerName": "ReportController",
        "description": "GET api/operation/v1/report/GuardTour/TaskDetail",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Report/ReportController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "TaskDetailReportQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/operation/v1/report/OperationOnBorad/Members",
        "actionName": "OperationOnBoradUser",
        "controllerName": "ReportController",
        "description": "GET api/operation/v1/report/OperationOnBorad/Members",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Report/ReportController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "OperationUserReportQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/SustainabilityMobile/GetContent",
        "actionName": "GetContent",
        "controllerName": "SustainabilityMobileController",
        "description": "POST api/v1/SustainabilityMobile/GetContent",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Mobile/SustainabilityMobileController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/SustainabilityMobile/GetContentDetail",
        "actionName": "GetContentDetail",
        "controllerName": "SustainabilityMobileController",
        "description": "POST api/v1/SustainabilityMobile/GetContentDetail",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Mobile/SustainabilityMobileController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/SustainabilityMobile/GetDigitalLibraryCategory",
        "actionName": "GetDigitalLibraryCategory",
        "controllerName": "SustainabilityMobileController",
        "description": "POST api/v1/SustainabilityMobile/GetDigitalLibraryCategory",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Mobile/SustainabilityMobileController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/SustainabilityMobile/GetDigitalLibraryFile",
        "actionName": "GetDigitalLibraryFile",
        "controllerName": "SustainabilityMobileController",
        "description": "POST api/v1/SustainabilityMobile/GetDigitalLibraryFile",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Mobile/SustainabilityMobileController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Sustainability/upload",
        "actionName": "Upload",
        "controllerName": "SustainabilityController",
        "description": "POST api/v1/Sustainability/upload",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Sustainability/Banner/Publish",
        "actionName": "Publish",
        "controllerName": "SustainabilityController",
        "description": "POST api/v1/Sustainability/Banner/Publish",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Sustainability/GetBanner",
        "actionName": "GetBanner",
        "controllerName": "SustainabilityController",
        "description": "POST api/v1/Sustainability/GetBanner",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Sustainability/DigitalLibrary/Delete",
        "actionName": "DigitalLibraryDelete",
        "controllerName": "SustainabilityController",
        "description": "POST api/v1/Sustainability/DigitalLibrary/Delete",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Sustainability/DigitalLibrary/Publish",
        "actionName": "DigitalLibraryPublish",
        "controllerName": "SustainabilityController",
        "description": "POST api/v1/Sustainability/DigitalLibrary/Publish",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Sustainability/DigitalLibrary/{id}",
        "actionName": "GetDigitalLibraryById",
        "controllerName": "SustainabilityController",
        "description": "GET api/v1/Sustainability/DigitalLibrary/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Sustainability/DigitalLibrary",
        "actionName": "GetDigitalLibrary",
        "controllerName": "SustainabilityController",
        "description": "GET api/v1/Sustainability/DigitalLibrary",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetAllDigitalLibraryQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Sustainability/ContentManagement/Delete",
        "actionName": "ContentManagementDelete",
        "controllerName": "SustainabilityController",
        "description": "POST api/v1/Sustainability/ContentManagement/Delete",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Sustainability/ContentManagement/Publish",
        "actionName": "ContentManagementPublish",
        "controllerName": "SustainabilityController",
        "description": "POST api/v1/Sustainability/ContentManagement/Publish",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Sustainability/ContentManagement/{id}",
        "actionName": "GetCMSById",
        "controllerName": "SustainabilityController",
        "description": "GET api/v1/Sustainability/ContentManagement/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Sustainability/ContentManagement",
        "actionName": "GetContentManagement",
        "controllerName": "SustainabilityController",
        "description": "GET api/v1/Sustainability/ContentManagement",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetAllContentManagementQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Sustainability/Sustainability/ChangeOrder",
        "actionName": "ChangeOrder",
        "controllerName": "SustainabilityController",
        "description": "POST api/v1/Sustainability/Sustainability/ChangeOrder",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Sustainability/PRBannerManagement/Delete",
        "actionName": "PRBannerDelete",
        "controllerName": "SustainabilityController",
        "description": "POST api/v1/Sustainability/PRBannerManagement/Delete",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Sustainability/PRBannerManagement/Publish",
        "actionName": "PRBannerPublish",
        "controllerName": "SustainabilityController",
        "description": "POST api/v1/Sustainability/PRBannerManagement/Publish",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Sustainability/PRBannerManagement/{id}",
        "actionName": "GetPRBannerById",
        "controllerName": "SustainabilityController",
        "description": "GET api/v1/Sustainability/PRBannerManagement/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Sustainability/PRBannerManagement",
        "actionName": "GetPRBannerManagement",
        "controllerName": "SustainabilityController",
        "description": "GET api/v1/Sustainability/PRBannerManagement",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "GetAllPRBannerManagementQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Sustainability/ContentManagement/MainMenu",
        "actionName": "GetCMSMenu",
        "controllerName": "SustainabilityController",
        "description": "GET api/v1/Sustainability/ContentManagement/MainMenu",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "MainContentManagementQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Sustainability/PRBannerManagement/GetInitial",
        "actionName": "GetInitialBanner",
        "controllerName": "SustainabilityController",
        "description": "GET api/v1/Sustainability/PRBannerManagement/GetInitial",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [
          {
            "name": "query",
            "type": "InitialPRBannerQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Sustainability/Sustainability/SaveConfig",
        "actionName": "SaveConfig",
        "controllerName": "SustainabilityController",
        "description": "POST api/v1/Sustainability/Sustainability/SaveConfig",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Sustainability/Web/SustainabilityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/[controller]/CheckHeader",
        "actionName": "GetCheckHeader",
        "controllerName": "ToolsController",
        "description": "GET api/v1/[controller]/CheckHeader",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Tools/ToolsController.cs",
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "value",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/[controller]/Health",
        "actionName": "GetHealth",
        "controllerName": "ToolsController",
        "description": "GET api/v1/[controller]/Health",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Tools/ToolsController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/[controller]/Version",
        "actionName": "GetVersion",
        "controllerName": "ToolsController",
        "description": "GET api/v1/[controller]/Version",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Tools/ToolsController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/[controller]/Environment",
        "actionName": "GetEnvironment",
        "controllerName": "ToolsController",
        "description": "GET api/v1/[controller]/Environment",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Tools/ToolsController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/urgent/event",
        "actionName": "EventList",
        "controllerName": "UrgentController",
        "description": "GET api/v1/urgent/event",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Urgent/UrgentController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "SREventQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/urgent/event",
        "actionName": "AddEvent",
        "controllerName": "UrgentController",
        "description": "POST api/v1/urgent/event",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Urgent/UrgentController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "EventCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/urgent/problem",
        "actionName": "ProblemList",
        "controllerName": "UrgentController",
        "description": "GET api/v1/urgent/problem",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Urgent/UrgentController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "ProblemQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/urgent/problem",
        "actionName": "AddProblem",
        "controllerName": "UrgentController",
        "description": "POST api/v1/urgent/problem",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Urgent/UrgentController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "ProblemCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/urgent/service-request",
        "actionName": "ServiceRequestList",
        "controllerName": "UrgentController",
        "description": "GET api/v1/urgent/service-request",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Urgent/UrgentController.cs",
        "parameters": [
          {
            "name": "data",
            "type": "ServiceRequestQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/urgent/service-request/{id}",
        "actionName": "GetStaffById",
        "controllerName": "UrgentController",
        "description": "GET api/v1/urgent/service-request/{id}",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Urgent/UrgentController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/urgent/service-request/upsert",
        "actionName": "Upsert",
        "controllerName": "UrgentController",
        "description": "POST api/v1/urgent/service-request/upsert",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Urgent/UrgentController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UpsertServiceRequestCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/urgent/Upload",
        "actionName": "Upload",
        "controllerName": "UrgentController",
        "description": "POST api/v1/urgent/Upload",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Urgent/UrgentController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/urgent/Upload-multiple",
        "actionName": "GetDefaultIcon",
        "controllerName": "UrgentController",
        "description": "POST api/v1/urgent/Upload-multiple",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Urgent/UrgentController.cs",
        "parameters": [
          {
            "name": "command",
            "type": "UploadMultipleCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/urgent/location",
        "actionName": "GetLocation",
        "controllerName": "UrgentController",
        "description": "GET api/v1/urgent/location",
        "file": "TCCTOBK.OperationBackend/TCCTOBK.OperationBackend.Api/Controllers/Urgent/UrgentController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      }
    ],
    "schemas": [],
    "summary": {
      "methods": {
        "GET": 148,
        "POST": 122,
        "PUT": 25,
        "DELETE": 11
      },
      "has_authentication": false,
      "has_documentation": true
    }
  },
  "dependencies": {
    "total": 44,
    "external_apis": [],
    "packages": [
      {
        "name": "Autofac",
        "version": "8.0.0",
        "type": "nuget_package"
      },
      {
        "name": "Autofac.Extensions.DependencyInjection",
        "version": "9.0.0",
        "type": "nuget_package"
      },
      {
        "name": "MediatR",
        "version": "12.2.0",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.AspNetCore.Authentication.JwtBearer",
        "version": "8.0.1",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.VisualStudio.Azure.Containers.Tools.Targets",
        "version": "1.19.5",
        "type": "nuget_package"
      },
      {
        "name": "Npgsql.EntityFrameworkCore.PostgreSQL",
        "version": "8.0.3",
        "type": "nuget_package"
      },
      {
        "name": "Serilog.AspNetCore",
        "version": "8.0.1",
        "type": "nuget_package"
      },
      {
        "name": "Serilog.Expressions",
        "version": "4.0.0",
        "type": "nuget_package"
      },
      {
        "name": "Serilog.Sinks.Http",
        "version": "8.0.0",
        "type": "nuget_package"
      },
      {
        "name": "Serilog.Sinks.Seq",
        "version": "6.0.0",
        "type": "nuget_package"
      },
      {
        "name": "Swashbuckle.AspNetCore",
        "version": "6.5.0",
        "type": "nuget_package"
      },
      {
        "name": "Swashbuckle.AspNetCore.Annotations",
        "version": "6.5.0",
        "type": "nuget_package"
      },
      {
        "name": "System.IdentityModel.Tokens.Jwt",
        "version": "7.2.0",
        "type": "nuget_package"
      },
      {
        "name": "AWSSDK.Extensions.NETCore.Setup",
        "version": "3.7.300",
        "type": "nuget_package"
      },
      {
        "name": "AWSSDK.SimpleEmail",
        "version": "3.7.300.52",
        "type": "nuget_package"
      },
      {
        "name": "DotNetCore.NPOI",
        "version": "1.2.3",
        "type": "nuget_package"
      },
      {
        "name": "FirebaseAdmin",
        "version": "3.1.0",
        "type": "nuget_package"
      },
      {
        "name": "FluentValidation",
        "version": "11.9.0",
        "type": "nuget_package"
      },
      {
        "name": "MailKit",
        "version": "4.3.0",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.AspNetCore.Http",
        "version": "2.2.2",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.EntityFrameworkCore",
        "version": "8.0.1",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.EntityFrameworkCore.DynamicLinq",
        "version": "8.3.10",
        "type": "nuget_package"
      },
      {
        "name": "MimeKit",
        "version": "4.3.0",
        "type": "nuget_package"
      },
      {
        "name": "Refit",
        "version": "7.0.0",
        "type": "nuget_package"
      },
      {
        "name": "System.IdentityModel.Tokens.Jwt",
        "version": "7.2.0",
        "type": "nuget_package"
      },
      {
        "name": "System.Linq.Dynamic.Core",
        "version": "1.3.10",
        "type": "nuget_package"
      },
      {
        "name": "MediatR",
        "version": "12.2.0",
        "type": "nuget_package"
      },
      {
        "name": "Autofac.Extensions.DependencyInjection",
        "version": "9.0.0",
        "type": "nuget_package"
      },
      {
        "name": "EFCore.NamingConventions",
        "version": "8.0.3",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.EntityFrameworkCore",
        "version": "8.0.1",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.Extensions.Caching.StackExchangeRedis",
        "version": "8.0.10",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.Extensions.Configuration.Abstractions",
        "version": "8.0.0",
        "type": "nuget_package"
      },
      {
        "name": "Minio",
        "version": "6.0.1",
        "type": "nuget_package"
      },
      {
        "name": "Npgsql.EntityFrameworkCore.PostgreSQL",
        "version": "8.0.0",
        "type": "nuget_package"
      },
      {
        "name": "Refit",
        "version": "7.0.0",
        "type": "nuget_package"
      },
      {
        "name": "Refit.HttpClientFactory",
        "version": "7.0.0",
        "type": "nuget_package"
      },
      {
        "name": "Refit.Newtonsoft.Json",
        "version": "7.0.0",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.EntityFrameworkCore",
        "version": "8.0.1",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.EntityFrameworkCore.InMemory",
        "version": "8.0.1",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.NET.Test.Sdk",
        "version": "17.8.0",
        "type": "nuget_package"
      },
      {
        "name": "Moq",
        "version": "4.20.70",
        "type": "nuget_package"
      },
      {
        "name": "NUnit",
        "version": "4.0.1",
        "type": "nuget_package"
      },
      {
        "name": "NUnit3TestAdapter",
        "version": "4.5.0",
        "type": "nuget_package"
      },
      {
        "name": "coverlet.collector",
        "version": "6.0.0",
        "type": "nuget_package"
      }
    ]
  },
  "generated_at": "2025-07-22T22:23:31.271Z"
}