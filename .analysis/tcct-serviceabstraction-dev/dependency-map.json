{
  "service": {
    "name": "tcct-serviceabstraction-dev",
    "path": "tcct-serviceabstraction-dev",
    "framework": ".NET",
    "language": "C#",
    "analyzed_at": "2025-07-22T22:19:09.649Z"
  },
  "api_inventory": {
    "endpoints": [
      {
        "method": "GET",
        "path": "api/v1/airquality/activefloor",
        "actionName": "GetActiveFloor",
        "controllerName": "AirQualityController",
        "description": "GET api/v1/airquality/activefloor",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/AirQuality/AirQualityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/airquality/outdoorzone",
        "actionName": "GetOutdoorZone",
        "controllerName": "AirQualityController",
        "description": "GET api/v1/airquality/outdoorzone",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/AirQuality/AirQualityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/airquality/simplefeed",
        "actionName": "GetSimpleFeedAll",
        "controllerName": "AirQualityController",
        "description": "GET api/v1/airquality/simplefeed",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/AirQuality/AirQualityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/airquality/feed",
        "actionName": "GetFeedAll",
        "controllerName": "AirQualityController",
        "description": "GET api/v1/airquality/feed",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/AirQuality/AirQualityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/airquality/feed/pm25",
        "actionName": "GetFeedPM25",
        "controllerName": "AirQualityController",
        "description": "GET api/v1/airquality/feed/pm25",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/AirQuality/AirQualityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/airquality/feed/pm10",
        "actionName": "GetFeedPM10",
        "controllerName": "AirQualityController",
        "description": "GET api/v1/airquality/feed/pm10",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/AirQuality/AirQualityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/airquality/feed/co2",
        "actionName": "GetFeedCO2",
        "controllerName": "AirQualityController",
        "description": "GET api/v1/airquality/feed/co2",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/AirQuality/AirQualityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/airquality/feed/temperature",
        "actionName": "GetFeedTemperature",
        "controllerName": "AirQualityController",
        "description": "GET api/v1/airquality/feed/temperature",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/AirQuality/AirQualityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/airquality/feed/humidity",
        "actionName": "GetFeedHumidity",
        "controllerName": "AirQualityController",
        "description": "GET api/v1/airquality/feed/humidity",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/AirQuality/AirQualityController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/carpark/payment/PromptPay",
        "actionName": "PostPromptPay",
        "controllerName": "PaymentController",
        "description": "POST api/v1/carpark/payment/PromptPay",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/CarparkPayment/PaymentController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "PromptPayChargeCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/carpark/payment/TrueMoneyOnline",
        "actionName": "PostTrueMoneyOnline",
        "controllerName": "PaymentController",
        "description": "POST api/v1/carpark/payment/TrueMoneyOnline",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/CarparkPayment/PaymentController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "TrueMoneyOnlineChargeCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/carpark/payment/InquiryPaymentTransaction",
        "actionName": "PostInquiryPaymentTransaction",
        "controllerName": "PaymentController",
        "description": "POST api/v1/carpark/payment/InquiryPaymentTransaction",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/CarparkPayment/PaymentController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "InquiryPaymentTransactionCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/carpark/redemption/GetParkingDetail",
        "actionName": "PostGetParkingDetail",
        "controllerName": "RedemptionController",
        "description": "POST api/v1/carpark/redemption/GetParkingDetail",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/CarparkPayment/RedemptionController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetParkingDetailQuery",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/carpark/redemption/AlldataDetailsReceipt",
        "actionName": "PostAlldataDetailsReceipt",
        "controllerName": "RedemptionController",
        "description": "POST api/v1/carpark/redemption/AlldataDetailsReceipt",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/CarparkPayment/RedemptionController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "AlldataDetailsReceiptCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/carpark/redemption/GenerateReceipt",
        "actionName": "GenerateReceipt",
        "controllerName": "RedemptionController",
        "description": "POST api/v1/carpark/redemption/GenerateReceipt",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/CarparkPayment/RedemptionController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GenerateReceiptCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/Assets/Categories",
        "actionName": "GetAssetCategories",
        "controllerName": "AssetManagementController",
        "description": "GET api/v1/certis/Assets/Categories",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/AssetManagementController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/Assets/Group",
        "actionName": "GetAssetGroup",
        "controllerName": "AssetManagementController",
        "description": "GET api/v1/certis/Assets/Group",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/AssetManagementController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/Assets",
        "actionName": "GetAsset",
        "controllerName": "AssetManagementController",
        "description": "GET api/v1/certis/Assets",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/AssetManagementController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/AttachmentTypes",
        "actionName": "GetAssetCategories",
        "controllerName": "AttachmentTypeController",
        "description": "GET api/v1/certis/AttachmentTypes",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/AttachmentTypeController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/CWO/types",
        "actionName": "GetCwoType",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "GET api/v1/certis/CWO/types",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/CorrectiveWorkOrderController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/CWO/statuscode",
        "actionName": "GetCwoStatusCode",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "GET api/v1/certis/CWO/statuscode",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/CorrectiveWorkOrderController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/CWO/defaultconfig",
        "actionName": "GetCwoDefaultConfig",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "GET api/v1/certis/CWO/defaultconfig",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/CorrectiveWorkOrderController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/FMRelated/Priorities",
        "actionName": "GetPriorities",
        "controllerName": "FMRelatedController",
        "description": "GET api/v1/certis/FMRelated/Priorities",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/FMRelatedController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/FMRelated/Requesters/Types",
        "actionName": "GetRequesterTypes",
        "controllerName": "FMRelatedController",
        "description": "GET api/v1/certis/FMRelated/Requesters/Types",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/FMRelatedController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/FMRelated/Requesters",
        "actionName": "GetRequesters",
        "controllerName": "FMRelatedController",
        "description": "GET api/v1/certis/FMRelated/Requesters",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/FMRelatedController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/FMRelated/CommentTypes",
        "actionName": "GetCommentTypes",
        "controllerName": "FMRelatedController",
        "description": "GET api/v1/certis/FMRelated/CommentTypes",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/FMRelatedController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/FMRelated/ServiceProviders",
        "actionName": "GetServiceProviders",
        "controllerName": "FMRelatedController",
        "description": "GET api/v1/certis/FMRelated/ServiceProviders",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/FMRelatedController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/FMRelated/ServiceCategories",
        "actionName": "GetServiceCategories",
        "controllerName": "FMRelatedController",
        "description": "GET api/v1/certis/FMRelated/ServiceCategories",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/FMRelatedController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/FMRelated/ServiceCategories/ServingLocations",
        "actionName": "GetServingLocations",
        "controllerName": "FMRelatedController",
        "description": "GET api/v1/certis/FMRelated/ServiceCategories/ServingLocations",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/FMRelatedController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/FMRelated/ProblemTypes",
        "actionName": "GetProblemTypes",
        "controllerName": "FMRelatedController",
        "description": "GET api/v1/certis/FMRelated/ProblemTypes",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/FMRelatedController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/FMRelated/Checklists",
        "actionName": "GetChecklists",
        "controllerName": "FMRelatedController",
        "description": "GET api/v1/certis/FMRelated/Checklists",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/FMRelatedController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/FMRelated/Checklists/Tasks",
        "actionName": "GetChecklistTasks",
        "controllerName": "FMRelatedController",
        "description": "GET api/v1/certis/FMRelated/Checklists/Tasks",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/FMRelatedController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/FMRelated/FMSupervisors",
        "actionName": "GetFMSupervisors",
        "controllerName": "FMRelatedController",
        "description": "GET api/v1/certis/FMRelated/FMSupervisors",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/FMRelatedController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/FMRelated/FMSupervisors/Services",
        "actionName": "GetFMSupervisorServices",
        "controllerName": "FMRelatedController",
        "description": "GET api/v1/certis/FMRelated/FMSupervisors/Services",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/FMRelatedController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/FMRelated/FMTechnicians",
        "actionName": "GetFMTechnicians",
        "controllerName": "FMRelatedController",
        "description": "GET api/v1/certis/FMRelated/FMTechnicians",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/FMRelatedController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/FMRelated/FMTechnicians/Services",
        "actionName": "GetFMTechnicianServices",
        "controllerName": "FMRelatedController",
        "description": "GET api/v1/certis/FMRelated/FMTechnicians/Services",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/FMRelatedController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/Locations/Types",
        "actionName": "GetLocationTypes",
        "controllerName": "LocationController",
        "description": "GET api/v1/certis/Locations/Types",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/LocationController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/Locations",
        "actionName": "GetLocations",
        "controllerName": "LocationController",
        "description": "GET api/v1/certis/Locations",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/LocationController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/Location/Config",
        "actionName": "GetLocationConfig",
        "controllerName": "LocationController",
        "description": "GET api/v1/certis/Location/Config",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/LocationController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/master/users",
        "actionName": "GetUsers",
        "controllerName": "MasterController",
        "description": "GET api/v1/certis/master/users",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/MasterController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/PPM/FrequencyTypes",
        "actionName": "GetFrequencyTypes",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "GET api/v1/certis/PPM/FrequencyTypes",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/PPM/StatusCodes",
        "actionName": "GetLocationTypes",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "GET api/v1/certis/PPM/StatusCodes",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/PPM/DefaultConfig",
        "actionName": "GetDefaultConfig",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "GET api/v1/certis/PPM/DefaultConfig",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/UserPermission/UsersProfile",
        "actionName": "GetUser",
        "controllerName": "UserPermissionController",
        "description": "GET api/v1/UserPermission/UsersProfile",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/UserPermissionController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/UserPermission/Myprofile/{userid}",
        "actionName": "GetUserProfileById",
        "controllerName": "UserPermissionController",
        "description": "GET api/v1/UserPermission/Myprofile/{userid}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/UserPermissionController.cs",
        "parameters": [
          {
            "name": "userid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/UserPermission/Userpermission",
        "actionName": "GetUserPermissions",
        "controllerName": "UserPermissionController",
        "description": "GET api/v1/UserPermission/Userpermission",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/UserPermissionController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/UserPermission/Group",
        "actionName": "GetPermissionGroup",
        "controllerName": "UserPermissionController",
        "description": "GET api/v1/UserPermission/Group",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/UserPermissionController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/UserPermission/Permissiongroup/{groupid}/Permissioninfo",
        "actionName": "GetPermissionGroupinfoById",
        "controllerName": "UserPermissionController",
        "description": "GET api/v1/UserPermission/Permissiongroup/{groupid}/Permissioninfo",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/UserPermissionController.cs",
        "parameters": [
          {
            "name": "groupid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/UserPermission/Permissiongroup/{groupid}/permission",
        "actionName": "GetPermissionGroupById",
        "controllerName": "UserPermissionController",
        "description": "GET api/v1/UserPermission/Permissiongroup/{groupid}/permission",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/UserPermissionController.cs",
        "parameters": [
          {
            "name": "groupid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/UserPermission/Permissiongroup/{userid}/user",
        "actionName": "GetPermissionGroupUserByUserId",
        "controllerName": "UserPermissionController",
        "description": "GET api/v1/UserPermission/Permissiongroup/{userid}/user",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/UserPermissionController.cs",
        "parameters": [
          {
            "name": "userid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/UserPermission/Functionrole",
        "actionName": "GetFunctionRole",
        "controllerName": "UserPermissionController",
        "description": "GET api/v1/UserPermission/Functionrole",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/MasterData/UserPermissionController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/event/types",
        "actionName": "GetEventType",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/event/types",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/event/subtypes",
        "actionName": "GetEventSubTypes",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/event/subtypes",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/event/categories",
        "actionName": "GetEventCategories",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/event/categories",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/types",
        "actionName": "GetCasesTypes",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/types",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/status",
        "actionName": "GetCasesStatus",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/status",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/task/category",
        "actionName": "GetTaskCategory",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/task/category",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/task/status",
        "actionName": "GetTaskStatuses",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/task/status",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/sitehandlers",
        "actionName": "GetSiteHandlers",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/sitehandlers",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/priority",
        "actionName": "GetCasePriorities",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/priority",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/slaconfigs",
        "actionName": "GetSlaConfigs",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/slaconfigs",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/locations",
        "actionName": "GetCaseLocations",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/locations",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/locations/types",
        "actionName": "GetCaseLocationTypes",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/locations/types",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/assets",
        "actionName": "GetAssets",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/assets",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/assets/categories",
        "actionName": "GetCaseAssetCategories",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/assets/categories",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/icons",
        "actionName": "GetIcons",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/icons",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [
          {
            "name": "caseId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/{caseId}/tasks",
        "actionName": "GetCaseTaskByCaseId",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/{caseId}/tasks",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [
          {
            "name": "caseId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/{caseId}/media",
        "actionName": "GetCaseMediaByCaseId",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/{caseId}/media",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [
          {
            "name": "caseId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/Cases/{id}",
        "actionName": "GetCaseById",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/Cases/{id}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "caseid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/{caseid}/tasks/{taskid}",
        "actionName": "GetCaseTaskByTaskId",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/{caseid}/tasks/{taskid}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [
          {
            "name": "caseid",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "taskid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/cms/cases/task",
        "actionName": "PostCaseCreateTasks",
        "controllerName": "CMSController",
        "description": "POST api/v1/certis/cms/cases/task",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "CaseCreateTaskRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/cms/cases/media",
        "actionName": "CreateMedia",
        "controllerName": "CMSController",
        "description": "POST api/v1/certis/cms/cases/media",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PATCH",
        "path": "api/v1/certis/cms/cases/task",
        "actionName": "UpdateTaskByTaskId",
        "controllerName": "CMSController",
        "description": "PATCH api/v1/certis/cms/cases/task",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "CaseUpdateTaskCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/cases/updates",
        "actionName": "GetCasesUpdates",
        "controllerName": "CMSController",
        "description": "GET api/v1/certis/cms/cases/updates",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/cms/cases/interface/{caseId}/cwo",
        "actionName": "CreateCWOWithCaseLink",
        "controllerName": "CMSController",
        "description": "POST api/v1/certis/cms/cases/interface/{caseId}/cwo",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [
          {
            "name": "caseId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/certis/cms/cases/update-case-status",
        "actionName": "UpdateCaseStatus",
        "controllerName": "CMSController",
        "description": "PUT api/v1/certis/cms/cases/update-case-status",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CMSController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "UpdateCaseStatusCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/cms/core/staff",
        "actionName": "CreateStaff",
        "controllerName": "CoreController",
        "description": "POST api/v1/certis/cms/core/staff",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CoreControlle.cs",
        "parameters": [
          {
            "name": "locationId",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "body",
            "type": "CreateStaffCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/core/locations/{locationId}/staffs",
        "actionName": "GetStaffByBuilding",
        "controllerName": "CoreController",
        "description": "GET api/v1/certis/cms/core/locations/{locationId}/staffs",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CoreControlle.cs",
        "parameters": [
          {
            "name": "locationId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/core/staffs/{staffCodeOrId}/functionroles",
        "actionName": "GetStaffRoleMapping",
        "controllerName": "CoreController",
        "description": "GET api/v1/certis/cms/core/staffs/{staffCodeOrId}/functionroles",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CoreControlle.cs",
        "parameters": [
          {
            "name": "staffCodeOrId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/cms/core/staffs/functionroles",
        "actionName": "AddStaffRoleMapping",
        "controllerName": "CoreController",
        "description": "POST api/v1/certis/cms/core/staffs/functionroles",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CoreControlle.cs",
        "parameters": [
          {
            "name": "body",
            "type": "AddStaffRoleMappingCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/certis/cms/core/staff",
        "actionName": "UpdateStaff",
        "controllerName": "CoreController",
        "description": "PUT api/v1/certis/cms/core/staff",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CoreControlle.cs",
        "parameters": [
          {
            "name": "body",
            "type": "UpdateStaffCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "DELETE",
        "path": "api/v1/certis/cms/core/staffs/functionroles",
        "actionName": "DeleteStaffRoleMapping",
        "controllerName": "CoreController",
        "description": "DELETE api/v1/certis/cms/core/staffs/functionroles",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CoreControlle.cs",
        "parameters": [
          {
            "name": "body",
            "type": "DeleteStaffRoleMappingCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/core/functionroles",
        "actionName": "GetFunctionRoles",
        "controllerName": "CoreController",
        "description": "GET api/v1/certis/cms/core/functionroles",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CoreControlle.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/core/staffs/search",
        "actionName": "GetStaffSearch",
        "controllerName": "CoreController",
        "description": "GET api/v1/certis/cms/core/staffs/search",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CoreControlle.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/CWO/CWO",
        "actionName": "PostCWO",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "POST api/v1/certis/CWO/CWO",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "CWORequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/CWO/Assign/Supervisor",
        "actionName": "PostAssignSupervisor",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "POST api/v1/certis/CWO/Assign/Supervisor",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "AssignSupervisorRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/CWO/Supervisor/Reject",
        "actionName": "PostSupervisorReject",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "POST api/v1/certis/CWO/Supervisor/Reject",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "SupervisorRejectRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/CWO/Assign/Technician",
        "actionName": "PostAssignTechnician",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "POST api/v1/certis/CWO/Assign/Technician",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "AssignTechnicianRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/CWO/Technician/Reject",
        "actionName": "PostTecnicianReject",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "POST api/v1/certis/CWO/Technician/Reject",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "TechnicianRejectRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/CWO/Acknowledge/Assignment",
        "actionName": "PostAcknowledgeAssignment",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "POST api/v1/certis/CWO/Acknowledge/Assignment",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "AcknowledgeAssignmentRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/CWO/Comment",
        "actionName": "PostComment",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "POST api/v1/certis/CWO/Comment",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "CommentRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/CWO/Pause",
        "actionName": "Pause",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "POST api/v1/certis/CWO/Pause",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "PauseRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/CWO/Resume",
        "actionName": "Resume",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "POST api/v1/certis/CWO/Resume",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "ResumeRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/CWO/Work/Offline",
        "actionName": "WorkOffline",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "POST api/v1/certis/CWO/Work/Offline",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "WorkOfflineRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/CWO/Task/Update",
        "actionName": "UpdateTask",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "POST api/v1/certis/CWO/Task/Update",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "UpdateTaskRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/CWO/Task/ConfirmCompletion",
        "actionName": "ConfirmTaskCompletion",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "POST api/v1/certis/CWO/Task/ConfirmCompletion",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "ConfirmTaskCompletionRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/CWO/Task/Complete",
        "actionName": "Complete",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "POST api/v1/certis/CWO/Task/Complete",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "CompleteRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/CWO/Task/Rework",
        "actionName": "Rework",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "POST api/v1/certis/CWO/Task/Rework",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "ReworkRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/CWO/Task/Close",
        "actionName": "Close",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "POST api/v1/certis/CWO/Task/Close",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "CloseRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/CWO/ClientVerify",
        "actionName": "ClientVerify",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "POST api/v1/certis/CWO/ClientVerify",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "ClientVerifyRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/CWO/Comment",
        "actionName": "GetComment",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "GET api/v1/certis/CWO/Comment",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/CWO/Task",
        "actionName": "GetTask",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "GET api/v1/certis/CWO/Task",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/CWO/CWOS",
        "actionName": "GetCWOS",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "GET api/v1/certis/CWO/CWOS",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/CWO/SupportiveTeam/{id}",
        "actionName": "GetSupportiveTeam",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "GET api/v1/certis/CWO/SupportiveTeam/{id}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/CWO/Transactions/{id}",
        "actionName": "GetTransactions",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "GET api/v1/certis/CWO/Transactions/{id}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/CWO/CommentById/{id}",
        "actionName": "GetCommentById",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "GET api/v1/certis/CWO/CommentById/{id}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/CWO/Documents/{id}/Related",
        "actionName": "DocumentsRelatedById",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "GET api/v1/certis/CWO/Documents/{id}/Related",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/CWO/cwoupdates",
        "actionName": "CWOUpdate",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "GET api/v1/certis/CWO/cwoupdates",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/CWO/CWOExternal",
        "actionName": "CreateCWOExternal",
        "controllerName": "CorrectiveWorkOrderController",
        "description": "POST api/v1/certis/CWO/CWOExternal",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/CorrectiveWorkOrderController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "CreateCWOExternalCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/DMS",
        "actionName": "DMS",
        "controllerName": "DocumentManagementController",
        "description": "POST api/v1/certis/DMS",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/DocumentManagementController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/DMS/Documents/{objectType}/hidden",
        "actionName": "GetDmsByObjectTypeAndKeyHidden",
        "controllerName": "DocumentManagementController",
        "description": "GET api/v1/certis/DMS/Documents/{objectType}/hidden",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/DocumentManagementController.cs",
        "parameters": [
          {
            "name": "objectType",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/DMS/Documents/{objectType}/{objectKey}/hidden",
        "actionName": "GetDmsByObjectTypeAndKeyHidden",
        "controllerName": "DocumentManagementController",
        "description": "GET api/v1/certis/DMS/Documents/{objectType}/{objectKey}/hidden",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/DocumentManagementController.cs",
        "parameters": [
          {
            "name": "objectType",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "objectKey",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/DMS/Documents/{ot}/{ok}/defult",
        "actionName": "GetDmsByObjectTypeAndKeyDefault",
        "controllerName": "DocumentManagementController",
        "description": "GET api/v1/certis/DMS/Documents/{ot}/{ok}/defult",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/DocumentManagementController.cs",
        "parameters": [
          {
            "name": "ot",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "ok",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/DMS/Documents/{ot}/{ok}",
        "actionName": "GetDmsByObjectTypeAndKey",
        "controllerName": "DocumentManagementController",
        "description": "GET api/v1/certis/DMS/Documents/{ot}/{ok}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/DocumentManagementController.cs",
        "parameters": [
          {
            "name": "ot",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "ok",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/DMS/Documents/image/{id}",
        "actionName": "GetDmsImageById",
        "controllerName": "DocumentManagementController",
        "description": "GET api/v1/certis/DMS/Documents/image/{id}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/DocumentManagementController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/DMS/Documents/detail/{id}",
        "actionName": "GetDmsDetailById",
        "controllerName": "DocumentManagementController",
        "description": "GET api/v1/certis/DMS/Documents/detail/{id}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/DocumentManagementController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/ifm/cwosbyincidentId/{id}",
        "actionName": "CWOsbyincidentId",
        "controllerName": "IFMController",
        "description": "GET api/v1/certis/ifm/cwosbyincidentId/{id}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/IFMControlle.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/PPM/WorkOrder/Create",
        "actionName": "PPMWO",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "POST api/v1/certis/PPM/WorkOrder/Create",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "PPMWORequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/PPM/Assign/Supervisor",
        "actionName": "PPMAssignSupervisor",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "POST api/v1/certis/PPM/Assign/Supervisor",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "AssignSupervisorRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/PPM/Assign/Technician",
        "actionName": "PPMAssignTechnician",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "POST api/v1/certis/PPM/Assign/Technician",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "AssignTechnicianRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/PPM/Supervisor/Reject",
        "actionName": "PPMSupervisorReject",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "POST api/v1/certis/PPM/Supervisor/Reject",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "SupervisorRejectRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/PPM/Technician/Reject",
        "actionName": "TechnicianReject",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "POST api/v1/certis/PPM/Technician/Reject",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "TechnicianRejectRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/PPM/Technician/Acknowldge",
        "actionName": "AcknowledgeAssignment",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "POST api/v1/certis/PPM/Technician/Acknowldge",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "AcknowledgeAssignmentRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/PPM/Comment",
        "actionName": "Comment",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "POST api/v1/certis/PPM/Comment",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "CommentRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/PPM/Task/{workOrderId}",
        "actionName": "GetTaskFromWorkOrder",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "GET api/v1/certis/PPM/Task/{workOrderId}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "workOrderId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/PPM/ServicingObject/{workOrderId}",
        "actionName": "GetSevicingObjectFromWorkOrder",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "GET api/v1/certis/PPM/ServicingObject/{workOrderId}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "workOrderId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/PPM/Task/Update",
        "actionName": "UpdateTask",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "POST api/v1/certis/PPM/Task/Update",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "UpdateTaskRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/PPM/Task/ConfirmCompletion",
        "actionName": "ConfirmTaskCompletion",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "POST api/v1/certis/PPM/Task/ConfirmCompletion",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "ConfirmTaskCompletionRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/PPM/Task/Complete",
        "actionName": "Complete",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "POST api/v1/certis/PPM/Task/Complete",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "CompleteRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/PPM/Task/Rework",
        "actionName": "Rework",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "POST api/v1/certis/PPM/Task/Rework",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "ReworkRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/PPM/ClientVerify",
        "actionName": "ClientVerify",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "POST api/v1/certis/PPM/ClientVerify",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "ClientVerifyRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/PPM/Task/Close",
        "actionName": "Close",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "POST api/v1/certis/PPM/Task/Close",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "CloseRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/PPM/PPMWOS",
        "actionName": "GetPPMWOS",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "GET api/v1/certis/PPM/PPMWOS",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/PPM/PPMMWOS",
        "actionName": "GetPPMMasterWorkOrder",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "GET api/v1/certis/PPM/PPMMWOS",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/PPM/CheckListMaps",
        "actionName": "GetCheckListMaps",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "GET api/v1/certis/PPM/CheckListMaps",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/PPM/Technicians/{id}",
        "actionName": "GetTechnicians",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "GET api/v1/certis/PPM/Technicians/{id}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/PPM/Comments/{woid}",
        "actionName": "GetComments",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "GET api/v1/certis/PPM/Comments/{woid}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "woid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/PPM/Transactions/{woid}",
        "actionName": "GetTransactions",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "GET api/v1/certis/PPM/Transactions/{woid}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "woid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/PPM/Documents/{id}/Related",
        "actionName": "DocumentsRelatedById",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "GET api/v1/certis/PPM/Documents/{id}/Related",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/PPM/ppmupdates",
        "actionName": "PPMUpdate",
        "controllerName": "PlanAndPreventiveMaintenanceController",
        "description": "GET api/v1/certis/PPM/ppmupdates",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/PlanAndPreventiveMaintenanceController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/cms/wfm/staff/clockin",
        "actionName": "StaffClockIn",
        "controllerName": "WFMController",
        "description": "POST api/v1/certis/cms/wfm/staff/clockin",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/WFMControlle.cs",
        "parameters": [
          {
            "name": "body",
            "type": "StaffClockInCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/certis/cms/wfm/staff/clockout",
        "actionName": "StaffClockOut",
        "controllerName": "WFMController",
        "description": "POST api/v1/certis/cms/wfm/staff/clockout",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/WFMControlle.cs",
        "parameters": [
          {
            "name": "body",
            "type": "StaffClockOutCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/certis/cms/wfm/dutyshifts/schedules",
        "actionName": "DutyShifts",
        "controllerName": "WFMController",
        "description": "GET api/v1/certis/cms/wfm/dutyshifts/schedules",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Certis/Transaction/WFMControlle.cs",
        "parameters": [
          {
            "name": "body",
            "type": "DutyShiftsQuery",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/customer/kc/login",
        "actionName": "PostLogin",
        "controllerName": "CustomerKeycloakController",
        "description": "POST api/v1/customer/kc/login",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Customer/CustomerKeycloakController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "LoginRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/customer/kc/logout",
        "actionName": "PostLogout",
        "controllerName": "CustomerKeycloakController",
        "description": "POST api/v1/customer/kc/logout",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Customer/CustomerKeycloakController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "LogoutRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/customer/kc/user",
        "actionName": "GetUser",
        "controllerName": "CustomerKeycloakController",
        "description": "GET api/v1/customer/kc/user",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Customer/CustomerKeycloakController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/customer/kc/user",
        "actionName": "PostUser",
        "controllerName": "CustomerKeycloakController",
        "description": "POST api/v1/customer/kc/user",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Customer/CustomerKeycloakController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "CreateUserRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/customer/kc/authalias",
        "actionName": "PostAuthAlias",
        "controllerName": "CustomerKeycloakController",
        "description": "POST api/v1/customer/kc/authalias",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Customer/CustomerKeycloakController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "AddAuthAliasRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "DELETE",
        "path": "api/v1/customer/kc/authalias",
        "actionName": "DeleteAuthAlias",
        "controllerName": "CustomerKeycloakController",
        "description": "DELETE api/v1/customer/kc/authalias",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Customer/CustomerKeycloakController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "RemoveAuthAliasRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/customer/kc/password/reset",
        "actionName": "PostResetPassword",
        "controllerName": "CustomerKeycloakController",
        "description": "POST api/v1/customer/kc/password/reset",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Customer/CustomerKeycloakController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "ResetPasswordRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/customer/kc/password",
        "actionName": "PutUpdatePassword",
        "controllerName": "CustomerKeycloakController",
        "description": "PUT api/v1/customer/kc/password",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Customer/CustomerKeycloakController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "UpdatePasswordRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/EV/account/register",
        "actionName": "Register",
        "controllerName": "EVController",
        "description": "POST api/v1/EV/account/register",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "RegisterCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/EV/account/authorize",
        "actionName": "Authorize",
        "controllerName": "EVController",
        "description": "POST api/v1/EV/account/authorize",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "AuthorizeCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/EV/account/signout",
        "actionName": "SignOut",
        "controllerName": "EVController",
        "description": "POST api/v1/EV/account/signout",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "SignOutCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/EV/place/{uuid}",
        "actionName": "GetPlace",
        "controllerName": "EVController",
        "description": "GET api/v1/EV/place/{uuid}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "uuid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/EV/places",
        "actionName": "GetPlaces",
        "controllerName": "EVController",
        "description": "GET api/v1/EV/places",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/EV/sessionInit",
        "actionName": "SessionInit",
        "controllerName": "EVController",
        "description": "POST api/v1/EV/sessionInit",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "SessionInitCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/EV/sessionStart",
        "actionName": "SessionStart",
        "controllerName": "EVController",
        "description": "POST api/v1/EV/sessionStart",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "SessionStartCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/EV/sessionStop",
        "actionName": "SessionStop",
        "controllerName": "EVController",
        "description": "POST api/v1/EV/sessionStop",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "SessionStopCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/EV/sessions",
        "actionName": "GetSessions",
        "controllerName": "EVController",
        "description": "GET api/v1/EV/sessions",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/EV/session/{uuid}",
        "actionName": "GetSession",
        "controllerName": "EVController",
        "description": "GET api/v1/EV/session/{uuid}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "uuid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/EV/sessionAccess",
        "actionName": "SessionAccess",
        "controllerName": "EVController",
        "description": "POST api/v1/EV/sessionAccess",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "SessionAccessCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/EV/reserve",
        "actionName": "Reserve",
        "controllerName": "EVController",
        "description": "POST api/v1/EV/reserve",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "ReserveCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/EV/reserve/{uuid}",
        "actionName": "GetReserve",
        "controllerName": "EVController",
        "description": "GET api/v1/EV/reserve/{uuid}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "uuid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/EV/reserves",
        "actionName": "GetReserves",
        "controllerName": "EVController",
        "description": "GET api/v1/EV/reserves",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/EV/reserveCancel",
        "actionName": "ReserveCancel",
        "controllerName": "EVController",
        "description": "POST api/v1/EV/reserveCancel",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "ReserveCancelCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/EV/reserveCheck",
        "actionName": "ReserveCheck",
        "controllerName": "EVController",
        "description": "POST api/v1/EV/reserveCheck",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "ReserveCheckCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/EV/invoice/{uuid}",
        "actionName": "GetInvoice",
        "controllerName": "EVController",
        "description": "GET api/v1/EV/invoice/{uuid}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "uuid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/EV/invoices",
        "actionName": "GetInvoices",
        "controllerName": "EVController",
        "description": "GET api/v1/EV/invoices",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/EV/receipt/{uuid}",
        "actionName": "GetReceipt",
        "controllerName": "EVController",
        "description": "GET api/v1/EV/receipt/{uuid}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "uuid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/EV/receipts",
        "actionName": "GetReceipts",
        "controllerName": "EVController",
        "description": "GET api/v1/EV/receipts",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/EV/checkoutInvoice",
        "actionName": "CheckoutInvoice",
        "controllerName": "EVController",
        "description": "POST api/v1/EV/checkoutInvoice",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "CheckoutInvoiceCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/EV/cancelInvoice",
        "actionName": "CancelInvoice",
        "controllerName": "EVController",
        "description": "POST api/v1/EV/cancelInvoice",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "CancelInvoiceCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/EV/receiptRefund",
        "actionName": "ReceiptRefund",
        "controllerName": "EVController",
        "description": "POST api/v1/EV/receiptRefund",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "ReceiptRefundCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/EV/place/{place}/building/{building}",
        "actionName": "GetPlaceBuilding",
        "controllerName": "EVController",
        "description": "GET api/v1/EV/place/{place}/building/{building}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [
          {
            "name": "place",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "building",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/EV/account/me",
        "actionName": "GetAccount",
        "controllerName": "EVController",
        "description": "GET api/v1/EV/account/me",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/EV/EVController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Facility/Management",
        "actionName": "GetFeedback",
        "controllerName": "FeedbackController",
        "description": "GET api/v1/Facility/Management",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Facility/Management/FeedbackController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Facility/Management",
        "actionName": "GetFeedbacks",
        "controllerName": "FeedbackController",
        "description": "GET api/v1/Facility/Management",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Facility/Management/FeedbackController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Facility/Management",
        "actionName": "PostFeedback",
        "controllerName": "FeedbackController",
        "description": "POST api/v1/Facility/Management",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Facility/Management/FeedbackController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Facility/Management",
        "actionName": "GetIncident",
        "controllerName": "IncidentController",
        "description": "GET api/v1/Facility/Management",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Facility/Management/IncidentController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Facility/Management",
        "actionName": "GetIncidents",
        "controllerName": "IncidentController",
        "description": "GET api/v1/Facility/Management",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Facility/Management/IncidentController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Facility/Management",
        "actionName": "PostIncident",
        "controllerName": "IncidentController",
        "description": "POST api/v1/Facility/Management",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Facility/Management/IncidentController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Facility/Management",
        "actionName": "GetWorkOrder",
        "controllerName": "WorkOrderController",
        "description": "GET api/v1/Facility/Management",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Facility/Management/WorkOrderController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Facility/Management",
        "actionName": "GetWorkOrder",
        "controllerName": "WorkOrderController",
        "description": "GET api/v1/Facility/Management",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Facility/Management/WorkOrderController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Facility/Management",
        "actionName": "PostWorkOrder",
        "controllerName": "WorkOrderController",
        "description": "POST api/v1/Facility/Management",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Facility/Management/WorkOrderController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Facility/Management",
        "actionName": "GetWorkRequest",
        "controllerName": "WorkRequestController",
        "description": "GET api/v1/Facility/Management",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Facility/Management/WorkRequestController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/Facility/Management",
        "actionName": "GetWorkRequest",
        "controllerName": "WorkRequestController",
        "description": "GET api/v1/Facility/Management",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Facility/Management/WorkRequestController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Facility/Management",
        "actionName": "PostWorkRequest",
        "controllerName": "WorkRequestController",
        "description": "POST api/v1/Facility/Management",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Facility/Management/WorkRequestController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/iviva/login/login",
        "actionName": "PostLogin",
        "controllerName": "LoginController",
        "description": "POST api/v1/fineday/iviva/login/login",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayIviva/LoginController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "LoginCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/iviva/login/logout",
        "actionName": "PostLogout",
        "controllerName": "LoginController",
        "description": "POST api/v1/fineday/iviva/login/logout",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayIviva/LoginController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "LogoutCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/iviva/login/checktoken",
        "actionName": "PostCheckToken",
        "controllerName": "LoginController",
        "description": "POST api/v1/fineday/iviva/login/checktoken",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayIviva/LoginController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "CheckTokenCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/iviva/login/forcelogout",
        "actionName": "PostForceLogout",
        "controllerName": "LoginController",
        "description": "POST api/v1/fineday/iviva/login/forcelogout",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayIviva/LoginController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "ForceLogoutCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/fineday/iviva/login/testconnection",
        "actionName": "GetTestConnection",
        "controllerName": "LoginController",
        "description": "GET api/v1/fineday/iviva/login/testconnection",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayIviva/LoginController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/iviva/member/GetDataMember",
        "actionName": "PostGetDataMember",
        "controllerName": "MemberController",
        "description": "POST api/v1/fineday/iviva/member/GetDataMember",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayIviva/MemberController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetDataMemberQuery",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/iviva/member/GetDataMemberCarPark",
        "actionName": "PostGetDataMemberCarPark",
        "controllerName": "MemberController",
        "description": "POST api/v1/fineday/iviva/member/GetDataMemberCarPark",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayIviva/MemberController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetDataMemberCarParkQuery",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/iviva/tenant/GetDataTenant",
        "actionName": "PostGetDataTenant",
        "controllerName": "TenantController",
        "description": "POST api/v1/fineday/iviva/tenant/GetDataTenant",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayIviva/TenantController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetDataTenantQuery",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/iviva/transaction/GetDataTransactionCarpark",
        "actionName": "PostGetDataTransactionCarpark",
        "controllerName": "TransactionController",
        "description": "POST api/v1/fineday/iviva/transaction/GetDataTransactionCarpark",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayIviva/TransactionController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetDataTransactionCarparkQuery",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/iviva/transaction/GetDataTransactionMember",
        "actionName": "PostGetDataTransactionMember",
        "controllerName": "TransactionController",
        "description": "POST api/v1/fineday/iviva/transaction/GetDataTransactionMember",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayIviva/TransactionController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetDataTransactionMemberQuery",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/iviva/transaction/GetDataTransactionVisitor",
        "actionName": "PostGetDataTransactionVisitor",
        "controllerName": "TransactionController",
        "description": "POST api/v1/fineday/iviva/transaction/GetDataTransactionVisitor",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayIviva/TransactionController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetDataTransactionVisitorQuery",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/iviva/transaction/GetDataTransactionTurnstile",
        "actionName": "PostGetDataTransactionTurnstile",
        "controllerName": "TransactionController",
        "description": "POST api/v1/fineday/iviva/transaction/GetDataTransactionTurnstile",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayIviva/TransactionController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetDataTransactionTurnstileQuery",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/authorizefloor/ChangeDefaultFloor",
        "actionName": "ChangeDefaultFloor",
        "controllerName": "AuthorizeFloorController",
        "description": "POST api/v1/fineday/authorizefloor/ChangeDefaultFloor",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/AuthorizeFloorController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "ChangeDefaultFloorCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/authorizefloor/GetResidenceLocationMapping",
        "actionName": "GetResidenceLocationMapping",
        "controllerName": "AuthorizeFloorController",
        "description": "POST api/v1/fineday/authorizefloor/GetResidenceLocationMapping",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/AuthorizeFloorController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetResidenceLocationMappingQuery",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/authorizefloor/GetQueueCallLift",
        "actionName": "GetQueueCallLift",
        "controllerName": "AuthorizeFloorController",
        "description": "POST api/v1/fineday/authorizefloor/GetQueueCallLift",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/AuthorizeFloorController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetQueueCallLiftCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/authorizefloor/CheckQueueLift",
        "actionName": "CheckQueueLift",
        "controllerName": "AuthorizeFloorController",
        "description": "POST api/v1/fineday/authorizefloor/CheckQueueLift",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/AuthorizeFloorController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "CheckQueueLiftCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/fineday/booking/reservation/search/query",
        "actionName": "ReservationSearchQuery",
        "controllerName": "BookingController",
        "description": "GET api/v1/fineday/booking/reservation/search/query",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/BookingController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/fineday/booking/reservation/getReservationByID/{id}",
        "actionName": "GetReservationByID",
        "controllerName": "BookingController",
        "description": "GET api/v1/fineday/booking/reservation/getReservationByID/{id}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/BookingController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/booking/reservation/create",
        "actionName": "ReservationCreate",
        "controllerName": "BookingController",
        "description": "POST api/v1/fineday/booking/reservation/create",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/BookingController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "ReservationCreateCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PATCH",
        "path": "api/v1/fineday/booking/reservation/update",
        "actionName": "ReservationUpdate",
        "controllerName": "BookingController",
        "description": "PATCH api/v1/fineday/booking/reservation/update",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/BookingController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "ReservationUpdateCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/fineday/booking/reservation/getFacilities",
        "actionName": "GetFacilities",
        "controllerName": "BookingController",
        "description": "GET api/v1/fineday/booking/reservation/getFacilities",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/BookingController.cs",
        "parameters": [
          {
            "name": "page",
            "type": "string",
            "required": false,
            "location": "query"
          },
          {
            "name": "limit",
            "type": "string",
            "required": false,
            "location": "query"
          },
          {
            "name": "types",
            "type": "string",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/fineday/booking/reservation/facilities",
        "actionName": "Facilities",
        "controllerName": "BookingController",
        "description": "GET api/v1/fineday/booking/reservation/facilities",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/BookingController.cs",
        "parameters": [
          {
            "name": "page",
            "type": "string",
            "required": false,
            "location": "query"
          },
          {
            "name": "limit",
            "type": "string",
            "required": false,
            "location": "query"
          },
          {
            "name": "types",
            "type": "string",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/booking/reservation/facilities/create",
        "actionName": "ReservationFacilitiesCreate",
        "controllerName": "BookingController",
        "description": "POST api/v1/fineday/booking/reservation/facilities/create",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/BookingController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "ReservationFacilitiesCreateCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PATCH",
        "path": "api/v1/fineday/booking/reservation/facilities/update",
        "actionName": "ReservationFacilitiesUpdate",
        "controllerName": "BookingController",
        "description": "PATCH api/v1/fineday/booking/reservation/facilities/update",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/BookingController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "ReservationFacilitiesUpdateCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/fineday/booking/reservation/search/facilities",
        "actionName": "ReservationSearchFacilitiesQuery",
        "controllerName": "BookingController",
        "description": "GET api/v1/fineday/booking/reservation/search/facilities",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/BookingController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/fineday/booking/reservation/search/facilities/count",
        "actionName": "ReservationSearchFacilitiesQueryCount",
        "controllerName": "BookingController",
        "description": "GET api/v1/fineday/booking/reservation/search/facilities/count",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/BookingController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/fineday/booking/reservation/facilities/{id}",
        "actionName": "GetReservationFacilitiesByID",
        "controllerName": "BookingController",
        "description": "GET api/v1/fineday/booking/reservation/facilities/{id}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/BookingController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/fineday/card/GetCardsAccessGroups",
        "actionName": "GetCardsAccessGroups",
        "controllerName": "CardController",
        "description": "GET api/v1/fineday/card/GetCardsAccessGroups",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/CardController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/card/CancelCardResidenceByCardNumber",
        "actionName": "CancelCardResidenceByCardNumber",
        "controllerName": "CardController",
        "description": "POST api/v1/fineday/card/CancelCardResidenceByCardNumber",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/CardController.cs",
        "parameters": [
          {
            "name": "reques",
            "type": "CancelCardResidenceByCardNumberCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/card/GetDataResidenceCardByPersonId",
        "actionName": "GetDataResidenceCardByPersonId",
        "controllerName": "CardController",
        "description": "POST api/v1/fineday/card/GetDataResidenceCardByPersonId",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/CardController.cs",
        "parameters": [
          {
            "name": "requ",
            "type": "GetDataResidenceCardByPersonIdCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/carpark/GetParkingDetailByQRCode",
        "actionName": "GetParkingDetailByQRCode",
        "controllerName": "CarparkController",
        "description": "POST api/v1/fineday/carpark/GetParkingDetailByQRCode",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/CarparkController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetParkingDetailByQRCodeQuery",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/carpark/GetParkingDetail",
        "actionName": "GetParkingDetail",
        "controllerName": "CarparkController",
        "description": "POST api/v1/fineday/carpark/GetParkingDetail",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/CarparkController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetParkingDetailQuery",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/carpark/GetParkingDetailByPersonId",
        "actionName": "GetParkingDetailByPersonId",
        "controllerName": "CarparkController",
        "description": "POST api/v1/fineday/carpark/GetParkingDetailByPersonId",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/CarparkController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetParkingDetailByPersonIdQuery",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/preregister/InviteResidenceVisitor",
        "actionName": "InviteResidenceVisitor",
        "controllerName": "PreRegisterController",
        "description": "POST api/v1/fineday/preregister/InviteResidenceVisitor",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/PreRegisterController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "InviteResidenceVisitorCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/preregister/CancelInviteResidenceVisitor",
        "actionName": "CancelInviteResidenceVisitor",
        "controllerName": "PreRegisterController",
        "description": "POST api/v1/fineday/preregister/CancelInviteResidenceVisitor",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/PreRegisterController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "CancelInviteResidenceVisitorCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/preregister/GetDataInviteVisitorTransaction",
        "actionName": "GetDataInviteVisitorTransaction",
        "controllerName": "PreRegisterController",
        "description": "POST api/v1/fineday/preregister/GetDataInviteVisitorTransaction",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/PreRegisterController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetDataInviteVisitorTransactionQuery",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/preregister/SetApproveInviteResidenceVisitor",
        "actionName": "SetApproveInviteResidenceVisitor",
        "controllerName": "PreRegisterController",
        "description": "POST api/v1/fineday/preregister/SetApproveInviteResidenceVisitor",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/PreRegisterController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "SetApproveInviteResidenceVisitorCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/preregister/CheckPreRegisterIsPass",
        "actionName": "CheckPreRegisterIsPass",
        "controllerName": "PreRegisterController",
        "description": "POST api/v1/fineday/preregister/CheckPreRegisterIsPass",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/PreRegisterController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "CheckPreRegisterIsPassCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/redemtion/RedeemParking",
        "actionName": "RedeemParking",
        "controllerName": "RedemptionController",
        "description": "POST api/v1/fineday/redemtion/RedeemParking",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/RedemptionController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "RedeemParkingCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/redemtion/GetRateCodeListByTenantID",
        "actionName": "GetRateCodeListByTenantID",
        "controllerName": "RedemptionController",
        "description": "POST api/v1/fineday/redemtion/GetRateCodeListByTenantID",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/RedemptionController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/fineday/redemtion/GetDataDepartment",
        "actionName": "GetDataDepartment",
        "controllerName": "RedemptionController",
        "description": "GET api/v1/fineday/redemtion/GetDataDepartment",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/RedemptionController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/fineday/redemtion/GetDataMemberType",
        "actionName": "GetDataMemberType",
        "controllerName": "RedemptionController",
        "description": "GET api/v1/fineday/redemtion/GetDataMemberType",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/RedemptionController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/fineday/redemtion/GetDataTerminal",
        "actionName": "GetDataTerminal",
        "controllerName": "RedemptionController",
        "description": "GET api/v1/fineday/redemtion/GetDataTerminal",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/RedemptionController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/fineday/redemtion/GetDataVehicleType",
        "actionName": "GetDataVehicleType",
        "controllerName": "RedemptionController",
        "description": "GET api/v1/fineday/redemtion/GetDataVehicleType",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/RedemptionController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/redemtion/CheckRedemptionStatusByEmail",
        "actionName": "CheckRedemptionStatusByEmail",
        "controllerName": "RedemptionController",
        "description": "POST api/v1/fineday/redemtion/CheckRedemptionStatusByEmail",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/RedemptionController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/residence/AddResidence",
        "actionName": "AddResidence",
        "controllerName": "ResidenceController",
        "description": "POST api/v1/fineday/residence/AddResidence",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/ResidenceController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "AddResidenceCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/residence/AddResidenceMember",
        "actionName": "AddResidenceMember",
        "controllerName": "ResidenceController",
        "description": "POST api/v1/fineday/residence/AddResidenceMember",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/ResidenceController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "AddResidenceMemberCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/residence/CheckFrontalFaceImage",
        "actionName": "CheckFrontalFaceImage",
        "controllerName": "ResidenceController",
        "description": "POST api/v1/fineday/residence/CheckFrontalFaceImage",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/ResidenceController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "CheckFrontalFaceImageCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/residence/UpdateResidenceMember",
        "actionName": "UpdateResidenceMember",
        "controllerName": "ResidenceController",
        "description": "POST api/v1/fineday/residence/UpdateResidenceMember",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/ResidenceController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "UpdateResidenceMemberCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/residence/GetDataResidenceMember",
        "actionName": "GetDataResidenceMember",
        "controllerName": "ResidenceController",
        "description": "POST api/v1/fineday/residence/GetDataResidenceMember",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/ResidenceController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetDataResidenceMemberCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/residence/CheckStatusMember",
        "actionName": "CheckStatusMember",
        "controllerName": "ResidenceController",
        "description": "POST api/v1/fineday/residence/CheckStatusMember",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/ResidenceController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "CheckStatusMemberCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/residence/GetDetailResidenceMemberByPersonID",
        "actionName": "GetDetailResidenceMemberByPersonID",
        "controllerName": "ResidenceController",
        "description": "POST api/v1/fineday/residence/GetDetailResidenceMemberByPersonID",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/ResidenceController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/residence/InactiveResidenceByResidenceID",
        "actionName": "InactiveResidenceByResidenceID",
        "controllerName": "ResidenceController",
        "description": "POST api/v1/fineday/residence/InactiveResidenceByResidenceID",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/ResidenceController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "InactiveResidenceByResidenceIDCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/fineday/residence/GetDataResidenceAuthorizeFloorMaster",
        "actionName": "GetDataResidenceAuthorizeFloorMaster",
        "controllerName": "ResidenceController",
        "description": "POST api/v1/fineday/residence/GetDataResidenceAuthorizeFloorMaster",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/ResidenceController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/fineday/residence/GetMasServiceType",
        "actionName": "GetMasServiceType",
        "controllerName": "ResidenceController",
        "description": "GET api/v1/fineday/residence/GetMasServiceType",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/FinedayResidence/ResidenceController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/innoflex/attendance/log",
        "actionName": "GetAttendanceLog",
        "controllerName": "InnoflexController",
        "description": "POST api/v1/innoflex/attendance/log",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Innoflex/InnoflexController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "AttendanceLogQuery",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/innoflex/onboard/residence",
        "actionName": "OnboardResidence",
        "controllerName": "InnoflexController",
        "description": "POST api/v1/innoflex/onboard/residence",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Innoflex/InnoflexController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "OnboardResidenceCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/innoflex/onboard/residence/revokeAccess",
        "actionName": "RevokeAccess",
        "controllerName": "InnoflexController",
        "description": "POST api/v1/innoflex/onboard/residence/revokeAccess",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Innoflex/InnoflexController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "RevokeAccessCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/lbs/position/AP",
        "actionName": "GetAP",
        "controllerName": "IndoorPositioningController",
        "description": "GET api/v1/lbs/position/AP",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/LBS/IndoorPositioningController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/lbs/position/sensing",
        "actionName": "PostSensing",
        "controllerName": "IndoorPositioningController",
        "description": "POST api/v1/lbs/position/sensing",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/LBS/IndoorPositioningController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "SaveSensingCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/lbs/position/query",
        "actionName": "PostQuery",
        "controllerName": "IndoorPositioningController",
        "description": "POST api/v1/lbs/position/query",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/LBS/IndoorPositioningController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "QueryPositionQuery",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/mt/parking/spaceNo",
        "actionName": "GetParkingSpace",
        "controllerName": "ParkingController",
        "description": "POST api/v1/mt/parking/spaceNo",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/MT/ParkingController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetParkingSpaceCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/mt/parking/trafficStatusRecord",
        "actionName": "GetTrafficStatusRecord",
        "controllerName": "ParkingController",
        "description": "POST api/v1/mt/parking/trafficStatusRecord",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/MT/ParkingController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetTrafficStatusRecordCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/mt/parking/query",
        "actionName": "GetParkingQuery",
        "controllerName": "ParkingController",
        "description": "POST api/v1/mt/parking/query",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/MT/ParkingController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetParkingQueryCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/mt/parking/valetParking/{uid}",
        "actionName": "GetValetParking",
        "controllerName": "ParkingController",
        "description": "GET api/v1/mt/parking/valetParking/{uid}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/MT/ParkingController.cs",
        "parameters": [
          {
            "name": "uid",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/mt/parking/valetParkingStations",
        "actionName": "GetValetParkingStations",
        "controllerName": "ParkingController",
        "description": "GET api/v1/mt/parking/valetParkingStations",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/MT/ParkingController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PATCH",
        "path": "api/v1/mt/parking/callValetCar",
        "actionName": "PatchCallMyValetCar",
        "controllerName": "ParkingController",
        "description": "PATCH api/v1/mt/parking/callValetCar",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/MT/ParkingController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "PatchCallMyValetCarCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/mt/parking/getParkingDetailByPersonId",
        "actionName": "GetParkingDetailByPersonId",
        "controllerName": "ParkingController",
        "description": "POST api/v1/mt/parking/getParkingDetailByPersonId",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/MT/ParkingController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetParkingDetailByPersonIdCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/mt/parking/pmsCarBlocker",
        "actionName": "PmsCarBlockerList",
        "controllerName": "ParkingController",
        "description": "POST api/v1/mt/parking/pmsCarBlocker",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/MT/ParkingController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/mt/parking/pmsCarBlocker/byDeviceId",
        "actionName": "PmsCarBlocker",
        "controllerName": "ParkingController",
        "description": "POST api/v1/mt/parking/pmsCarBlocker/byDeviceId",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/MT/ParkingController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "PmsCarBlockerCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/mt/parking/carpark/updateTransaction",
        "actionName": "UpdateTransactionCarpark",
        "controllerName": "ParkingController",
        "description": "POST api/v1/mt/parking/carpark/updateTransaction",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/MT/ParkingController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "UpdateTransactionCarparkCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/mt/parking/carpark/entCarpark",
        "actionName": "EntCarpark",
        "controllerName": "ParkingController",
        "description": "POST api/v1/mt/parking/carpark/entCarpark",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/MT/ParkingController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "EntCarparkCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/mt/parking/carpark/extCarpark",
        "actionName": "ExtCarpark",
        "controllerName": "ParkingController",
        "description": "POST api/v1/mt/parking/carpark/extCarpark",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/MT/ParkingController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "ExtCarparkCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/netatmo/home/data/{homeId}",
        "actionName": "GetHomeData",
        "controllerName": "NetatmoController",
        "description": "GET api/v1/netatmo/home/data/{homeId}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Netatmo/NetatmoController.cs",
        "parameters": [
          {
            "name": "homeId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/netatmo/home/status/{homeId}",
        "actionName": "GetHomeStatus",
        "controllerName": "NetatmoController",
        "description": "GET api/v1/netatmo/home/status/{homeId}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Netatmo/NetatmoController.cs",
        "parameters": [
          {
            "name": "homeId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/netatmo/scenarios/{homeId}",
        "actionName": "GetScenarios",
        "controllerName": "NetatmoController",
        "description": "GET api/v1/netatmo/scenarios/{homeId}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Netatmo/NetatmoController.cs",
        "parameters": [
          {
            "name": "homeId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/netatmo/home/schedule/create",
        "actionName": "CreateNewHomeSchedule",
        "controllerName": "NetatmoController",
        "description": "POST api/v1/netatmo/home/schedule/create",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Netatmo/NetatmoController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "CreateNewHomeScheduleCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/netatmo/home/schedule/switch",
        "actionName": "PostSwitchHomeSchedule",
        "controllerName": "NetatmoController",
        "description": "POST api/v1/netatmo/home/schedule/switch",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Netatmo/NetatmoController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "SwitchHomeScheduleRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/netatmo/home/setstate",
        "actionName": "SetState",
        "controllerName": "NetatmoController",
        "description": "POST api/v1/netatmo/home/setstate",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Netatmo/NetatmoController.cs",
        "parameters": [
          {
            "name": "homeId",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "body",
            "type": "SetStateCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/netatmo/homes/data/all/{homeId}",
        "actionName": "GetHomeData2",
        "controllerName": "NetatmoController",
        "description": "GET api/v1/netatmo/homes/data/all/{homeId}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Netatmo/NetatmoController.cs",
        "parameters": [
          {
            "name": "homeId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/netatmo/synchomeschedule",
        "actionName": "SetSynchomeschedule",
        "controllerName": "NetatmoController",
        "description": "POST api/v1/netatmo/synchomeschedule",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Netatmo/NetatmoController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "SynchomeScheduleCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/netatmo/home/{homeId}/schedule/{scheduleId}",
        "actionName": "GetHomeSchedule",
        "controllerName": "NetatmoController",
        "description": "GET api/v1/netatmo/home/{homeId}/schedule/{scheduleId}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Netatmo/NetatmoController.cs",
        "parameters": [
          {
            "name": "homeId",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "scheduleId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/netatmo/home/schedule/validate",
        "actionName": "ValidateNewHomeScheduleCooling",
        "controllerName": "NetatmoController",
        "description": "POST api/v1/netatmo/home/schedule/validate",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Netatmo/NetatmoController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "ValidateNewHomeScheduleCoolingCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/netatmo/get-user-token",
        "actionName": "GetListUserToken",
        "controllerName": "NetatmoController",
        "description": "GET api/v1/netatmo/get-user-token",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Netatmo/NetatmoController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/netatmo/upsert-user-token",
        "actionName": "UpsertUserToken",
        "controllerName": "NetatmoController",
        "description": "POST api/v1/netatmo/upsert-user-token",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Netatmo/NetatmoController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "UpsertUserTokenCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/netatmo/update-status-sync",
        "actionName": "UpdateStatusSync",
        "controllerName": "NetatmoController",
        "description": "POST api/v1/netatmo/update-status-sync",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Netatmo/NetatmoController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "UpdateStatusSyncCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/netatmo/sync-home",
        "actionName": "SyncHome",
        "controllerName": "NetatmoController",
        "description": "POST api/v1/netatmo/sync-home",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Netatmo/NetatmoController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "SyncHomeCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/Notification",
        "actionName": "PostEmail",
        "controllerName": "NotificationController",
        "description": "POST api/v1/Notification",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Notification/NotificationController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/kc/login",
        "actionName": "PostLogin",
        "controllerName": "OperationKeycloakController",
        "description": "POST api/v1/operation/kc/login",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Operation/OperationKeycloakController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "LoginRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/kc/refresh-token",
        "actionName": "RefreshToken",
        "controllerName": "OperationKeycloakController",
        "description": "POST api/v1/operation/kc/refresh-token",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Operation/OperationKeycloakController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "RefreshTokenRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/kc/user",
        "actionName": "GetUser",
        "controllerName": "OperationKeycloakController",
        "description": "GET api/v1/operation/kc/user",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Operation/OperationKeycloakController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/kc/user",
        "actionName": "PostUser",
        "controllerName": "OperationKeycloakController",
        "description": "POST api/v1/operation/kc/user",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Operation/OperationKeycloakController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "CreateUserRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/kc/authalias",
        "actionName": "PostAuthAlias",
        "controllerName": "OperationKeycloakController",
        "description": "POST api/v1/operation/kc/authalias",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Operation/OperationKeycloakController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "AddAuthAliasRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "DELETE",
        "path": "api/v1/operation/kc/authalias",
        "actionName": "DeleteAuthAlias",
        "controllerName": "OperationKeycloakController",
        "description": "DELETE api/v1/operation/kc/authalias",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Operation/OperationKeycloakController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "RemoveAuthAliasRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/operation/kc/password/reset",
        "actionName": "PostResetPassword",
        "controllerName": "OperationKeycloakController",
        "description": "POST api/v1/operation/kc/password/reset",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Operation/OperationKeycloakController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "ResetPasswordRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PUT",
        "path": "api/v1/operation/kc/password",
        "actionName": "PutUpdatePassword",
        "controllerName": "OperationKeycloakController",
        "description": "PUT api/v1/operation/kc/password",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Operation/OperationKeycloakController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "UpdatePasswordRequest",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/operation/kc/staff_event_logs",
        "actionName": "GetUser",
        "controllerName": "OperationKeycloakController",
        "description": "GET api/v1/operation/kc/staff_event_logs",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Operation/OperationKeycloakController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "EventsLogRequest",
            "required": false,
            "location": "query"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/payment/PromptPay",
        "actionName": "ArgentoPromptPay",
        "controllerName": "PaymentV2Controller",
        "description": "POST api/v1/payment/PromptPay",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Payment/PaymentController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "ArgentoPromptPayChargeCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/payment/Inquiry",
        "actionName": "ArgentoInquiryPaymentTransaction",
        "controllerName": "PaymentV2Controller",
        "description": "POST api/v1/payment/Inquiry",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Payment/PaymentController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "ArgentoInquiryPaymentTransactionCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/tenant/{tenantId}",
        "actionName": "GetCaseTaskByCaseId",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/tenant/{tenantId}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "tenantId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/tenant/{tenantId}/properties",
        "actionName": "GetPropertiesList",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/tenant/{tenantId}/properties",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "tenantId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/tenant/{tenantId}/properties/{id}",
        "actionName": "GetPropertieDetails",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/tenant/{tenantId}/properties/{id}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "tenantId",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/announcements",
        "actionName": "GetAnnouncements",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/announcements",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/announcements/{id}",
        "actionName": "GetAnnouncementDetails",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/announcements/{id}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/home",
        "actionName": "GetHome",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/home",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/directory-contacts",
        "actionName": "GetDirectoryContacts",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/directory-contacts",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/house-rules/categories",
        "actionName": "GetHouseRulesCategories",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/house-rules/categories",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/house-rules",
        "actionName": "GetHouseRules",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/house-rules",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/default-property",
        "actionName": "GetDefaultProperty",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/default-property",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/tenant/{tenantId}/car-parking/get-registered-vehicles",
        "actionName": "GetRegisteredVehicles",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/tenant/{tenantId}/car-parking/get-registered-vehicles",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "tenantId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/tenant/{tenantId}/car-parking/get-car-parking-quota-unit-wise",
        "actionName": "GetCarParkingQuotaUnitWise",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/tenant/{tenantId}/car-parking/get-car-parking-quota-unit-wise",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "tenantId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/tenant/{tenantId}/car-parking/get-car-parking-quota-total-combined",
        "actionName": "GetCarParkingQuota",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/tenant/{tenantId}/car-parking/get-car-parking-quota-total-combined",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "tenantId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/register-new-tenant",
        "actionName": "RegisterNewTenant",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/register-new-tenant",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "RegisterNewTenantCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/update-default-property",
        "actionName": "UpdateDefaultProperty",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/update-default-property",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "UpdateDefaultPropertyCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/tenant/{tenantId}/visitors",
        "actionName": "GetVisitorList",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/tenant/{tenantId}/visitors",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "tenantId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/tenant/{tenantId}/visitor/{id}",
        "actionName": "GetVisitorDetails",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/tenant/{tenantId}/visitor/{id}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "tenantId",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/tenant/add-visitor",
        "actionName": "AddVisitor",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/tenant/add-visitor",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "AddVisitorCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/tenant/visitor/update-status",
        "actionName": "UpdateVisitorStatus",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/tenant/visitor/update-status",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "UpdateVisitorStatusCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/tenant/{tenantId}/parcels",
        "actionName": "GetParcels",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/tenant/{tenantId}/parcels",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "tenantId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/get-parcel-status-list",
        "actionName": "GetParcelStatusList",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/get-parcel-status-list",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/tenant/{tenantId}/parcel/{id}",
        "actionName": "GetTenantDetailsParcel",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/tenant/{tenantId}/parcel/{id}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "tenantId",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "id",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "PATCH",
        "path": "api/v1/resident/update-parcel-read-status",
        "actionName": "UpdateParcelReadStatus",
        "controllerName": "ServiceMindResidentialController",
        "description": "PATCH api/v1/resident/update-parcel-read-status",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "UpdateParcelReadStatusCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/authorize-tenant",
        "actionName": "AuthorizeTenant",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/authorize-tenant",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "AuthorizeTenantCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/generate-new-presigned-url",
        "actionName": "GenerateNewPresigned",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/generate-new-presigned-url",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "GenerateNewPresignedCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/upload-image-url",
        "actionName": "UploadImageUrl",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/upload-image-url",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/save-logs",
        "actionName": "SaveLogs",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/save-logs",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "tenantId",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "projectId",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "body",
            "type": "SaveLogsCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/tenant/{tenantId}/car-parking/{projectId}/terms-and-conditions",
        "actionName": "GetTermsAndConditions",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/tenant/{tenantId}/car-parking/{projectId}/terms-and-conditions",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "tenantId",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "projectId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/terms-and-conditions/tenant/{tenantId}/car-parking/{projectId}",
        "actionName": "GetTermsAndConditionsEmail",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/terms-and-conditions/tenant/{tenantId}/car-parking/{projectId}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "tenantId",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "projectId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/add-visitor-car-parking-log",
        "actionName": "AddVisitorCarParkingLog",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/add-visitor-car-parking-log",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "AddVisitorCarParkingLogCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/notifications/notify-lift-arrival/{tenantId}",
        "actionName": "NotifyLiftArrival",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/notifications/notify-lift-arrival/{tenantId}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "tenantId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/maintenance-repair/get-event-types",
        "actionName": "GetEventTypes",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/maintenance-repair/get-event-types",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetEventTypesCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/maintenance-repair/get-maintainance-repair-list",
        "actionName": "GetMaintainanceRepairList",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/maintenance-repair/get-maintainance-repair-list",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetMaintainanceRepairListCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/get-common-areas",
        "actionName": "GetCommonAreas",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/get-common-areas",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/maintenance-repair/get-status-codes",
        "actionName": "GetStatusCodes",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/maintenance-repair/get-status-codes",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/maintenance-repair/create-case",
        "actionName": "CreateMaintainanceRepair",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/maintenance-repair/create-case",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "CreateMaintainanceRepairCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/service-request/get-event-types",
        "actionName": "GetServiceRequestEventTypes",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/service-request/get-event-types",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetServiceRequestEventTypesCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/service-request/get-list",
        "actionName": "GetServiceRequestList",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/service-request/get-list",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetServiceRequestListCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/service-request/get-status-codes",
        "actionName": "GetServiceRequestStatusCodes",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/service-request/get-status-codes",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/service-request/create-case",
        "actionName": "CreateServiceRequest",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/service-request/create-case",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "CreateServiceRequestCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/feedback/get-event-types",
        "actionName": "GetFeedbackEventTypes",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/feedback/get-event-types",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetFeedbackEventTypesCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/feedback/get-list",
        "actionName": "GetFeedbackList",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/feedback/get-list",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetFeedbackListCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/feedback/get-status-codes",
        "actionName": "GetFeedbackStatusCodes",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/feedback/get-status-codes",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/feedback/create-case",
        "actionName": "CreateFeedback",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/feedback/create-case",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "CreateFeedbackCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/webhook/case-updates",
        "actionName": "CaseUpdates",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/webhook/case-updates",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "CaseUpdatesCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/deactivate-visitor-pass",
        "actionName": "DeactivateVisitorPass",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/deactivate-visitor-pass",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "DeactivateVisitorPassCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/tenants/{tenantId}/questionnaires",
        "actionName": "GetQuestionnaires",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/tenants/{tenantId}/questionnaires",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "tenantId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/tenants/{tenantId}/questionnaires/history",
        "actionName": "GetQuestionnaireHistory",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/tenants/{tenantId}/questionnaires/history",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "tenantId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/tenants/{tenantId}/questionnaires/detail/{questionnaireId}",
        "actionName": "GetQuestionnaireDetail",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/tenants/{tenantId}/questionnaires/detail/{questionnaireId}",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "tenantId",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "questionnaireId",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/submit-questionnaire",
        "actionName": "SubmitQuestionnaire",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/submit-questionnaire",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "SubmitQuestionnaireCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/webhook/onboarding-sync-updates",
        "actionName": "OnboardingSyncUpdates",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/webhook/onboarding-sync-updates",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "OnboardingSyncUpdatesCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/GetDetailResidenceMemberByPersonID",
        "actionName": "GetDetailResidenceMemberByPersonID",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/GetDetailResidenceMemberByPersonID",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/payment/generate-prompt-pay-qr",
        "actionName": "GeneratePromptPayQr",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/payment/generate-prompt-pay-qr",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "body",
            "type": "GeneratePromptPayQrCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/payment/webhook/payment-status-callback",
        "actionName": "GetCallBackPayment",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/payment/webhook/payment-status-callback",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetCallBackPaymentCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/payment/get-transactions",
        "actionName": "GetPaymentTransaction",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/payment/get-transactions",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetPaymentTransactionCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/payment/payment-inquiry",
        "actionName": "GetPaymentInquiry",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/payment/payment-inquiry",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetPaymentInquiryCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/meters-and-billing/get-latest-meter-reading",
        "actionName": "GetLatestMeterReading",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/meters-and-billing/get-latest-meter-reading",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetLatestMeterReadingCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/meters-and-billing/get-billing-history",
        "actionName": "GetBillingHistory",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/meters-and-billing/get-billing-history",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetBillingHistoryCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "POST",
        "path": "api/v1/resident/meters-and-billing/get-invoice-history",
        "actionName": "GetInvoiceHistory",
        "controllerName": "ServiceMindResidentialController",
        "description": "POST api/v1/resident/meters-and-billing/get-invoice-history",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [
          {
            "name": "request",
            "type": "GetInvoiceHistoryCommand",
            "required": true,
            "location": "body"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/meters-and-billing/get-invoice-details",
        "actionName": "GetInvoiceDetails",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/meters-and-billing/get-invoice-details",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/resident/meters-and-billing/get-receipt-details",
        "actionName": "GetReceiptDetails",
        "controllerName": "ServiceMindResidentialController",
        "description": "GET api/v1/resident/meters-and-billing/get-receipt-details",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/ServiceMindResidential/ServiceMindResidentialController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/[controller]/CheckHeader",
        "actionName": "GetCheckHeader",
        "controllerName": "ToolsController",
        "description": "GET api/v1/[controller]/CheckHeader",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Tools/ToolsController.cs",
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "required": true,
            "location": "path"
          },
          {
            "name": "value",
            "type": "string",
            "required": true,
            "location": "path"
          }
        ],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/[controller]/Health",
        "actionName": "GetHealth",
        "controllerName": "ToolsController",
        "description": "GET api/v1/[controller]/Health",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Tools/ToolsController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/[controller]/Version",
        "actionName": "GetVersion",
        "controllerName": "ToolsController",
        "description": "GET api/v1/[controller]/Version",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Tools/ToolsController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      },
      {
        "method": "GET",
        "path": "api/v1/[controller]/Environment",
        "actionName": "GetEnvironment",
        "controllerName": "ToolsController",
        "description": "GET api/v1/[controller]/Environment",
        "file": "TCCT.ServiceAbstraction/TCCT.ServiceAbstraction.Api/Controllers/Tools/ToolsController.cs",
        "parameters": [],
        "responses": [
          {
            "status": 200,
            "description": "Success response"
          }
        ],
        "middleware": [],
        "authentication": null
      }
    ],
    "schemas": [],
    "summary": {
      "methods": {
        "GET": 175,
        "POST": 165,
        "PATCH": 5,
        "PUT": 4,
        "DELETE": 3
      },
      "has_authentication": false,
      "has_documentation": true
    }
  },
  "dependencies": {
    "total": 31,
    "external_apis": [],
    "packages": [
      {
        "name": "MediatR",
        "version": "12.2.0",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.AspNetCore.Authentication.JwtBearer",
        "version": "8.0.1",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.VisualStudio.Azure.Containers.Tools.Targets",
        "version": "1.19.5",
        "type": "nuget_package"
      },
      {
        "name": "Npgsql.EntityFrameworkCore.PostgreSQL",
        "version": "8.0.4",
        "type": "nuget_package"
      },
      {
        "name": "Serilog.AspNetCore",
        "version": "8.0.1",
        "type": "nuget_package"
      },
      {
        "name": "Serilog.Expressions",
        "version": "4.0.0",
        "type": "nuget_package"
      },
      {
        "name": "Serilog.Sinks.Http",
        "version": "8.0.0",
        "type": "nuget_package"
      },
      {
        "name": "Serilog.Sinks.Seq",
        "version": "6.0.0",
        "type": "nuget_package"
      },
      {
        "name": "SkiaSharp",
        "version": "2.88.8",
        "type": "nuget_package"
      },
      {
        "name": "SkiaSharp.NativeAssets.Linux.NoDependencies",
        "version": "2.88.8",
        "type": "nuget_package"
      },
      {
        "name": "Swashbuckle.AspNetCore",
        "version": "6.5.0",
        "type": "nuget_package"
      },
      {
        "name": "Swashbuckle.AspNetCore.Annotations",
        "version": "6.5.0",
        "type": "nuget_package"
      },
      {
        "name": "System.IdentityModel.Tokens.Jwt",
        "version": "7.2.0",
        "type": "nuget_package"
      },
      {
        "name": "FluentValidation",
        "version": "11.9.0",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.AspNetCore.Http.Features",
        "version": "5.0.17",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.Extensions.Configuration.UserSecrets",
        "version": "6.0.1",
        "type": "nuget_package"
      },
      {
        "name": "MediatR",
        "version": "12.2.0",
        "type": "nuget_package"
      },
      {
        "name": "Dapper",
        "version": "2.1.35",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.EntityFrameworkCore",
        "version": "8.0.8",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.EntityFrameworkCore.Relational",
        "version": "8.0.8",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.Extensions.Caching.StackExchangeRedis",
        "version": "9.0.0",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.Extensions.Configuration.Abstractions",
        "version": "8.0.0",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.Extensions.Http",
        "version": "8.0.0",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.Extensions.Options.ConfigurationExtensions",
        "version": "8.0.0",
        "type": "nuget_package"
      },
      {
        "name": "Npgsql.EntityFrameworkCore.PostgreSQL",
        "version": "8.0.4",
        "type": "nuget_package"
      },
      {
        "name": "SkiaSharp",
        "version": "2.88.8",
        "type": "nuget_package"
      },
      {
        "name": "Microsoft.NET.Test.Sdk",
        "version": "17.9.0",
        "type": "nuget_package"
      },
      {
        "name": "Moq",
        "version": "4.20.70",
        "type": "nuget_package"
      },
      {
        "name": "NUnit",
        "version": "4.1.0",
        "type": "nuget_package"
      },
      {
        "name": "NUnit3TestAdapter",
        "version": "4.5.0",
        "type": "nuget_package"
      },
      {
        "name": "RichardSzalay.MockHttp",
        "version": "7.0.0",
        "type": "nuget_package"
      }
    ]
  },
  "generated_at": "2025-07-22T22:23:10.779Z"
}