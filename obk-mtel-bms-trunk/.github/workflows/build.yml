name: Build and Deploy to ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.8.1'

      - name: Setup Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: |
          yarn cache clean
          yarn install --frozen-lockfile

      - name: Build
        run: |
          yarn build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker image
        id: build
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: 'one-bangkok-dev'
        run: |
          ./scripts/build-docker.sh --env dev
          docker tag ob-bms:latest $ECR_REGISTRY/$ECR_REPOSITORY:ob-bms_latest
          docker image push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:ob-bms_latest"

      - name: Set kubeconfig
        id: set-kubeconfig
        run: |
          aws sts get-caller-identity
          aws eks --region ap-southeast-1 update-kubeconfig --name one-bangkok-dev

      - name: Rollout
        id: rollout
        run: |
          kubectl set image deployment/ob-bms ob-bms=${{ steps.build.outputs.image }}
          kubectl rollout restart deployment/ob-bms
